{"version":3,"sources":["webpack:///../modules/core/src/scenegraph/nodes/model-node.js","webpack:///../modules/core/src/scenegraph/nodes/scenegraph-node.js","webpack:///../modules/core/src/geometries/ico-sphere-geometry.js","webpack:///../examples/core/persistence/app.js","webpack:///./templates/core/example-persistence.jsx","webpack:///../node_modules/math.gl/dist/esm/classes/base/vector.js","webpack:///../node_modules/math.gl/dist/esm/classes/vector3.js"],"names":["ModelNode","props","gl","setProps","this","_setModelNodeProps","delete","model","managedResources","forEach","resource","draw","setUniforms","setAttributes","updateModuleSettings","ScenegraphNode","id","uid","constructor","display","position","rotation","scale","matrix","userData","_setScenegraphNodeProps","toString","setPosition","assert","setRotation","setScale","setMatrix","copyMatrix","copy","setMatrixComponents","update","updateMatrix","pos","rot","identity","translate","rotateXYZ","getCoordinateUniforms","modelMatrix","worldMatrix","worldInverse","worldInverseTranspose","viewMatrix","objectMatrix","worldInverseMatrix","worldInverseTransposeMatrix","Object","ICO_POSITIONS","ICO_INDICES","IcoSphereGeometry","iterations","PI","Math","PI2","positions","indices","getMiddlePoint","pointMemo","key","i1","i2","x1","y1","z1","xm","ym","zm","len","i","indices2","j","a","b","c","normals","Array","texCoords","i3","in1","in2","in3","iu1","iu2","iu3","theta1","phi1","v1","u1","x2","y2","z2","theta2","phi2","v2","u2","x3","y3","z3","theta3","phi3","v3","u3","vec1","vec2","normal","newIndex","size","value","Uint16Array","attributes","POSITION","Float32Array","NORMAL","TEXCOORD_0","tesselateIcosaHedron","Geometry","SCREEN_QUAD_VS","ePos","eRot","nPos","AppAnimationLoop","getInfo","onInitialize","width","height","setParameters","clearColor","clearDepth","depthTest","depthFunc","faceCulling","cullFace","BACK","mainFramebuffer","pingpongFramebuffers","quadGeometry","aPosition","vertexCount","quad","program","vs","fs","geometry","persistenceQuad","sphere","distanceFromCenter","q","axis","theta","onRender","tick","aspect","projection","fov","radians","view","eye","clear","framebuffer","color","depth","uniforms","uModelView","uView","uProjection","uColor","uLighting","ppi","currentFramebuffer","nextFramebuffer","uScene","uPersistence","uRes","uTexture","AnimationLoop","window","animationLoop","Example","render","exampleConfig","pageContext","React","Component","_MathArray","Vector","apply","arguments","sqrt","lengthSquared","length","ELEMENTS","mathArray","distanceSquared","dist","product","magnitude","check","_len","vectors","_key","_i","_vectors","vector","_len2","_key2","_i2","_vectors2","distance","add","subtract","multiply","multiplyScalar","get","set","ORIGIN","_Vector","Vector3","_this","x","undefined","y","z","call","debug","array","object","vec3","_ref","_ref$origin","origin","_ref2","_ref2$origin","_ref3","_ref3$origin","matrix4","transformAsPoint","matrix3","matrix2","quaternion"],"mappings":"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","file":"component---templates-core-example-persistence-jsx-bebf340d34a993410c35.js","sourcesContent":["import Model from '../../lib/model';\nimport ScenegraphNode from './scenegraph-node';\n\nexport default class ModelNode extends ScenegraphNode {\n  constructor(gl, props = {}) {\n    super(props);\n\n    // pverride callbacks to make sure we call them with this\n    this.onBeforeRender = null;\n    this.AfterRender = null;\n\n    // Create new Model or used supplied Model\n    if (gl instanceof Model) {\n      this.model = gl;\n      this._setModelNodeProps(props);\n    } else {\n      this.model = new Model(gl, props);\n    }\n\n    this.managedResources = props.managedResources || [];\n  }\n\n  setProps(props) {\n    super.setProps(props);\n    this._setModelNodeProps(props);\n    return this;\n  }\n\n  delete() {\n    if (this.model) {\n      this.model.delete();\n      this.model = null;\n    }\n\n    this.managedResources.forEach(resource => resource.delete());\n    this.managedResources = [];\n  }\n\n  // Forward node methods\n  draw(...args) {\n    // Return value indicates if something was actually drawn\n    return this.model.draw(...args);\n  }\n\n  setUniforms(...args) {\n    this.model.setUniforms(...args);\n    return this;\n  }\n\n  setAttributes(...args) {\n    this.model.setAttributes(...args);\n    return this;\n  }\n\n  updateModuleSettings(...args) {\n    this.model.updateModuleSettings(...args);\n    return this;\n  }\n\n  // PRIVATE\n\n  _setModelNodeProps(props) {\n    this.model.setProps(props);\n  }\n}\n","import {Vector3, Matrix4} from 'math.gl';\nimport {assert, uid} from '../../utils';\n\nexport default class ScenegraphNode {\n  constructor(props = {}) {\n    const {id} = props;\n\n    this.id = id || uid(this.constructor.name);\n\n    this.display = true; // whether to display the object at all\n    this.position = new Vector3();\n    this.rotation = new Vector3();\n    this.scale = new Vector3(1, 1, 1);\n    this.matrix = new Matrix4();\n    this.userData = {};\n\n    this.props = {};\n    this._setScenegraphNodeProps(props);\n  }\n\n  delete() {}\n\n  setProps(props) {\n    this._setScenegraphNodeProps(props);\n    return this;\n  }\n\n  toString() {\n    return `{type: ScenegraphNode, id: ${this.id})}`;\n  }\n\n  setPosition(position) {\n    assert(position.length === 3, 'setPosition requires vector argument');\n    this.position = position;\n    return this;\n  }\n\n  setRotation(rotation) {\n    assert(rotation.length === 3, 'setRotation requires vector argument');\n    this.rotation = rotation;\n    return this;\n  }\n\n  setScale(scale) {\n    assert(scale.length === 3, 'setScale requires vector argument');\n    this.scale = scale;\n    return this;\n  }\n\n  setMatrix(matrix, copyMatrix = true) {\n    if (copyMatrix) {\n      this.matrix.copy(matrix);\n    } else {\n      this.matrix = matrix;\n    }\n  }\n\n  setMatrixComponents({position, rotation, scale, update = true}) {\n    if (position) {\n      this.setPosition(position);\n    }\n    if (rotation) {\n      this.setRotation(rotation);\n    }\n    if (scale) {\n      this.setScale(scale);\n    }\n    if (update) {\n      this.updateMatrix();\n    }\n    return this;\n  }\n\n  updateMatrix() {\n    const pos = this.position;\n    const rot = this.rotation;\n    const scale = this.scale;\n\n    this.matrix.identity();\n    this.matrix.translate(pos);\n    this.matrix.rotateXYZ(rot);\n    this.matrix.scale(scale);\n    return this;\n  }\n\n  update({position, rotation, scale} = {}) {\n    if (position) {\n      this.setPosition(position);\n    }\n    if (rotation) {\n      this.setRotation(rotation);\n    }\n    if (scale) {\n      this.setScale(scale);\n    }\n    this.updateMatrix();\n    return this;\n  }\n\n  getCoordinateUniforms(viewMatrix, modelMatrix) {\n    // TODO - solve multiple class problem\n    // assert(viewMatrix instanceof Matrix4);\n    assert(viewMatrix);\n    modelMatrix = modelMatrix || this.matrix;\n    const worldMatrix = new Matrix4(viewMatrix).multiplyRight(modelMatrix);\n    const worldInverse = worldMatrix.invert();\n    const worldInverseTranspose = worldInverse.transpose();\n\n    return {\n      viewMatrix,\n      modelMatrix,\n      objectMatrix: modelMatrix,\n      worldMatrix,\n      worldInverseMatrix: worldInverse,\n      worldInverseTransposeMatrix: worldInverseTranspose\n    };\n  }\n\n  // TODO - copied code, not yet vetted\n  /*\n  transform() {\n    if (!this.parent) {\n      this.endPosition.set(this.position);\n      this.endRotation.set(this.rotation);\n      this.endScale.set(this.scale);\n    } else {\n      const parent = this.parent;\n      this.endPosition.set(this.position.add(parent.endPosition));\n      this.endRotation.set(this.rotation.add(parent.endRotation));\n      this.endScale.set(this.scale.add(parent.endScale));\n    }\n\n    const ch = this.children;\n    for (let i = 0; i < ch.length; ++i) {\n      ch[i].transform();\n    }\n\n    return this;\n  }\n  */\n\n  _setScenegraphNodeProps(props) {\n    if ('display' in props) {\n      this.display = props.display;\n    }\n\n    if ('position' in props) {\n      this.setPosition(props.position);\n    }\n    if ('rotation' in props) {\n      this.setRotation(props.rotation);\n    }\n    if ('scale' in props) {\n      this.setScale(props.scale);\n    }\n\n    // Matrix overwrites other props\n    if ('matrix' in props) {\n      this.setMatrix(props.matrix);\n    }\n\n    Object.assign(this.props, props);\n  }\n}\n","import {Vector3} from 'math.gl';\nimport Geometry from '../geometry/geometry';\nimport {uid} from '../utils';\n\n/* eslint-disable comma-spacing, max-statements, complexity */\n\nconst ICO_POSITIONS = [-1, 0, 0, 0, 1, 0, 0, 0, -1, 0, 0, 1, 0, -1, 0, 1, 0, 0];\nconst ICO_INDICES = [3, 4, 5, 3, 5, 1, 3, 1, 0, 3, 0, 4, 4, 0, 2, 4, 2, 5, 2, 0, 1, 5, 2, 1];\n\nexport default class IcoSphereGeometry extends Geometry {\n  constructor(props = {}) {\n    const {id = uid('ico-sphere-geometry')} = props;\n    const {indices, attributes} = tesselateIcosaHedron(props);\n    super({\n      ...props,\n      id,\n      indices,\n      attributes: {...attributes, ...props.attributes}\n    });\n  }\n}\n\nfunction tesselateIcosaHedron(props) {\n  const {iterations = 0} = props;\n\n  const PI = Math.PI;\n  const PI2 = PI * 2;\n\n  const positions = [...ICO_POSITIONS];\n  let indices = [...ICO_INDICES];\n\n  positions.push();\n  indices.push();\n\n  const getMiddlePoint = (() => {\n    const pointMemo = {};\n\n    return (i1, i2) => {\n      i1 *= 3;\n      i2 *= 3;\n      const mini = i1 < i2 ? i1 : i2;\n      const maxi = i1 > i2 ? i1 : i2;\n      const key = `${mini}|${maxi}`;\n\n      if (key in pointMemo) {\n        return pointMemo[key];\n      }\n\n      const x1 = positions[i1];\n      const y1 = positions[i1 + 1];\n      const z1 = positions[i1 + 2];\n      const x2 = positions[i2];\n      const y2 = positions[i2 + 1];\n      const z2 = positions[i2 + 2];\n      let xm = (x1 + x2) / 2;\n      let ym = (y1 + y2) / 2;\n      let zm = (z1 + z2) / 2;\n      const len = Math.sqrt(xm * xm + ym * ym + zm * zm);\n\n      xm /= len;\n      ym /= len;\n      zm /= len;\n\n      positions.push(xm, ym, zm);\n\n      return (pointMemo[key] = positions.length / 3 - 1);\n    };\n  })();\n\n  for (let i = 0; i < iterations; i++) {\n    const indices2 = [];\n    for (let j = 0; j < indices.length; j += 3) {\n      const a = getMiddlePoint(indices[j + 0], indices[j + 1]);\n      const b = getMiddlePoint(indices[j + 1], indices[j + 2]);\n      const c = getMiddlePoint(indices[j + 2], indices[j + 0]);\n\n      indices2.push(c, indices[j + 0], a, a, indices[j + 1], b, b, indices[j + 2], c, a, b, c);\n    }\n    indices = indices2;\n  }\n\n  // Calculate texCoords and normals\n  const normals = new Array(positions.length);\n  const texCoords = new Array((positions.length / 3) * 2);\n\n  const l = indices.length;\n  for (let i = l - 3; i >= 0; i -= 3) {\n    const i1 = indices[i + 0];\n    const i2 = indices[i + 1];\n    const i3 = indices[i + 2];\n    const in1 = i1 * 3;\n    const in2 = i2 * 3;\n    const in3 = i3 * 3;\n    const iu1 = i1 * 2;\n    const iu2 = i2 * 2;\n    const iu3 = i3 * 2;\n    const x1 = positions[in1 + 0];\n    const y1 = positions[in1 + 1];\n    const z1 = positions[in1 + 2];\n    const theta1 = Math.acos(z1 / Math.sqrt(x1 * x1 + y1 * y1 + z1 * z1));\n    const phi1 = Math.atan2(y1, x1) + PI;\n    const v1 = theta1 / PI;\n    const u1 = 1 - phi1 / PI2;\n    const x2 = positions[in2 + 0];\n    const y2 = positions[in2 + 1];\n    const z2 = positions[in2 + 2];\n    const theta2 = Math.acos(z2 / Math.sqrt(x2 * x2 + y2 * y2 + z2 * z2));\n    const phi2 = Math.atan2(y2, x2) + PI;\n    const v2 = theta2 / PI;\n    const u2 = 1 - phi2 / PI2;\n    const x3 = positions[in3 + 0];\n    const y3 = positions[in3 + 1];\n    const z3 = positions[in3 + 2];\n    const theta3 = Math.acos(z3 / Math.sqrt(x3 * x3 + y3 * y3 + z3 * z3));\n    const phi3 = Math.atan2(y3, x3) + PI;\n    const v3 = theta3 / PI;\n    const u3 = 1 - phi3 / PI2;\n    const vec1 = [x3 - x2, y3 - y2, z3 - z2];\n    const vec2 = [x1 - x2, y1 - y2, z1 - z2];\n    const normal = new Vector3(vec1).cross(vec2).normalize();\n    let newIndex;\n\n    if (\n      (u1 === 0 || u2 === 0 || u3 === 0) &&\n      (u1 === 0 || u1 > 0.5) &&\n      (u2 === 0 || u2 > 0.5) &&\n      (u3 === 0 || u3 > 0.5)\n    ) {\n      positions.push(positions[in1 + 0], positions[in1 + 1], positions[in1 + 2]);\n      newIndex = positions.length / 3 - 1;\n      indices.push(newIndex);\n      texCoords[newIndex * 2 + 0] = 1;\n      texCoords[newIndex * 2 + 1] = v1;\n      normals[newIndex * 3 + 0] = normal.x;\n      normals[newIndex * 3 + 1] = normal.y;\n      normals[newIndex * 3 + 2] = normal.z;\n\n      positions.push(positions[in2 + 0], positions[in2 + 1], positions[in2 + 2]);\n      newIndex = positions.length / 3 - 1;\n      indices.push(newIndex);\n      texCoords[newIndex * 2 + 0] = 1;\n      texCoords[newIndex * 2 + 1] = v2;\n      normals[newIndex * 3 + 0] = normal.x;\n      normals[newIndex * 3 + 1] = normal.y;\n      normals[newIndex * 3 + 2] = normal.z;\n\n      positions.push(positions[in3 + 0], positions[in3 + 1], positions[in3 + 2]);\n      newIndex = positions.length / 3 - 1;\n      indices.push(newIndex);\n      texCoords[newIndex * 2 + 0] = 1;\n      texCoords[newIndex * 2 + 1] = v3;\n      normals[newIndex * 3 + 0] = normal.x;\n      normals[newIndex * 3 + 1] = normal.y;\n      normals[newIndex * 3 + 2] = normal.z;\n    }\n\n    normals[in1 + 0] = normals[in2 + 0] = normals[in3 + 0] = normal.x;\n    normals[in1 + 1] = normals[in2 + 1] = normals[in3 + 1] = normal.y;\n    normals[in1 + 2] = normals[in2 + 2] = normals[in3 + 2] = normal.z;\n\n    texCoords[iu1 + 0] = u1;\n    texCoords[iu1 + 1] = v1;\n\n    texCoords[iu2 + 0] = u2;\n    texCoords[iu2 + 1] = v2;\n\n    texCoords[iu3 + 0] = u3;\n    texCoords[iu3 + 1] = v3;\n  }\n\n  return {\n    indices: {size: 1, value: new Uint16Array(indices)},\n    attributes: {\n      POSITION: {size: 3, value: new Float32Array(positions)},\n      NORMAL: {size: 3, value: new Float32Array(normals)},\n      TEXCOORD_0: {size: 2, value: new Float32Array(texCoords)}\n    }\n  };\n}\n","import {\n  AnimationLoop,\n  setParameters,\n  Model,\n  clear,\n  Framebuffer,\n  Program,\n  Geometry,\n  IcoSphereGeometry,\n  ModelNode\n} from '@luma.gl/core';\nimport {Matrix4, Vector3, radians} from 'math.gl';\n\nconst INFO_HTML = `\n<p>\n  Electron trails renderings persist across multiple frames.\n<p>\n  Uses multiple luma.gl <code>Framebuffer</code>s to hold previously rendered data between frames.\n</p>\n`;\n\nconst SCREEN_QUAD_VS = `\\\nattribute vec2 aPosition;\n\nvoid main(void) {\n  gl_Position = vec4(aPosition, 0, 1);\n}\n`;\n\nconst SCREEN_QUAD_FS = `\\\nprecision highp float;\n\nuniform sampler2D uTexture;\nuniform vec2 uRes;\n\nvoid main(void) {\n  vec2 p = gl_FragCoord.xy/uRes.xy;\n  gl_FragColor = texture2D(uTexture, p);\n}\n`;\n\nconst PERSISTENCE_FS = `\\\nprecision highp float;\n\nuniform sampler2D uScene;\nuniform sampler2D uPersistence;\nuniform vec2 uRes;\n\nvoid main(void) {\n  vec2 p = gl_FragCoord.xy / uRes.xy;\n  vec4 cS = texture2D(uScene, p);\n  vec4 cP = texture2D(uPersistence, p);\n  gl_FragColor = mix(cS*4.0, cP, 0.9);\n}\n`;\n\nconst SPHERE_VS = `\\\nattribute vec3 positions;\nattribute vec3 normals;\n\nuniform mat4 uModelView;\nuniform mat4 uProjection;\n\nvarying vec3 normal;\n\nvoid main(void) {\n  gl_Position = uProjection * uModelView * vec4(positions, 1.0);\n  normal = vec3((uModelView * vec4(normals, 0.0)));\n}\n`;\n\nconst SPHERE_FS = `\\\nprecision highp float;\n\nuniform vec3 uColor;\nuniform bool uLighting;\n\nvarying vec3 normal;\n\nvoid main(void) {\n  float d = 1.0;\n  if (uLighting) {\n    vec3 l = normalize(vec3(1,1,2));\n    d = dot(normal, l);\n  }\n  gl_FragColor = vec4(uColor * d, 1);\n}\n`;\n\nconst ELECTRON_COUNT = 64;\nconst ePos = [];\nconst eRot = [];\nconst nPos = [];\n\nlet mainFramebuffer;\nlet pingpongFramebuffers;\nlet quad;\nlet persistenceQuad;\nlet sphere;\n\n/* eslint-disable max-statements */\nexport default class AppAnimationLoop extends AnimationLoop {\n  static getInfo() {\n    return INFO_HTML;\n  }\n\n  onInitialize({gl, width, height}) {\n    setParameters(gl, {\n      clearColor: [0, 0, 0, 1],\n      clearDepth: 1,\n      depthTest: true,\n      depthFunc: gl.LEQUAL,\n      faceCulling: true,\n      cullFace: gl.BACK\n    });\n\n    mainFramebuffer = new Framebuffer(gl, {width, height});\n\n    pingpongFramebuffers = [\n      new Framebuffer(gl, {width, height}),\n      new Framebuffer(gl, {width, height})\n    ];\n\n    const QUAD_POSITIONS = [-1, -1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1];\n\n    const quadGeometry = new Geometry({\n      attributes: {\n        aPosition: {\n          value: new Float32Array(QUAD_POSITIONS),\n          size: 2\n        }\n      },\n      vertexCount: 6\n    });\n\n    quad = new Model(gl, {\n      id: 'quad',\n      program: new Program(gl, {vs: SCREEN_QUAD_VS, fs: SCREEN_QUAD_FS}),\n      geometry: quadGeometry\n    });\n\n    persistenceQuad = new Model(gl, {\n      id: 'persistence-quad',\n      program: new Program(gl, {vs: SCREEN_QUAD_VS, fs: PERSISTENCE_FS}),\n      geometry: quadGeometry\n    });\n\n    sphere = new ModelNode(gl, {\n      id: 'electron',\n      geometry: new IcoSphereGeometry({\n        iterations: 4\n      }),\n      program: new Program(gl, {vs: SPHERE_VS, fs: SPHERE_FS})\n    });\n\n    const dt = 0.0125;\n\n    for (let i = 0; i < ELECTRON_COUNT; i++) {\n      // Place electron cloud at random positions\n      const pos = new Vector3(Math.random() - 0.5, Math.random() - 0.5, Math.random() - 0.5);\n\n      // Push them out a bit\n      const distanceFromCenter = Math.random() + 1.0;\n      pos.normalize().scale(distanceFromCenter);\n      const s = 1.25;\n      pos.scale(s);\n      ePos.push(pos);\n\n      // Get a random vector and cross\n      const q = new Vector3(Math.random() - 0.5, Math.random() - 0.5, Math.random() - 0.5);\n      const axis = pos\n        .clone()\n        .cross(q)\n        .normalize();\n\n      const theta = (4 / distanceFromCenter) * dt;\n      const rot = new Matrix4().rotateAxis(theta, axis);\n      eRot.push(rot);\n    }\n\n    for (let i = 0; i < ELECTRON_COUNT; i++) {\n      let pos = new Vector3(Math.random() - 0.5, Math.random() - 0.5, Math.random() - 0.5);\n      pos = pos.normalize().scale(0.5);\n      nPos.push(pos);\n    }\n  }\n\n  onRender({gl, tick, width, height, aspect}) {\n    mainFramebuffer.resize({width, height});\n    pingpongFramebuffers[0].resize({width, height});\n    pingpongFramebuffers[1].resize({width, height});\n\n    const projection = new Matrix4().perspective({fov: radians(75), aspect});\n    const view = new Matrix4().lookAt({eye: [0, 0, 4]});\n\n    clear(gl, {framebuffer: mainFramebuffer, color: [0, 0, 0, 1.0], depth: 1});\n\n    // Render electrons to framebuffer\n    for (let i = 0; i < ELECTRON_COUNT; i++) {\n      ePos[i] = eRot[i].transformVector(ePos[i]);\n      const modelMatrix = new Matrix4().translate(ePos[i]);\n\n      sphere\n        .setPosition([modelMatrix[12], modelMatrix[13], modelMatrix[14]])\n        .setScale([0.06125, 0.06125, 0.06125])\n        .updateMatrix()\n        .draw({\n          framebuffer: mainFramebuffer,\n          uniforms: {\n            uModelView: view.clone().multiplyRight(sphere.matrix),\n            uView: view,\n            uProjection: projection,\n            uColor: [0.0, 0.5, 1],\n            uLighting: 0\n          }\n        });\n    }\n\n    // Render core to framebuffer\n    for (let i = 0; i < ELECTRON_COUNT; i++) {\n      const modelMatrix = new Matrix4()\n        .rotateXYZ([tick * 0.013, 0, 0])\n        .rotateXYZ([0, tick * 0.021, 0])\n        .translate(nPos[i]);\n\n      sphere\n        .setPosition([modelMatrix[12], modelMatrix[13], modelMatrix[14]])\n        .setScale([0.25, 0.25, 0.25])\n        .updateMatrix()\n        .draw({\n          framebuffer: mainFramebuffer,\n          uniforms: {\n            uModelView: view.clone().multiplyRight(sphere.matrix),\n            uProjection: projection,\n            uColor: [1, 0.25, 0.25],\n            uLighting: 1\n          }\n        });\n    }\n\n    const ppi = tick % 2;\n    const currentFramebuffer = pingpongFramebuffers[ppi];\n    const nextFramebuffer = pingpongFramebuffers[1 - ppi];\n\n    // Accumulate in persistence buffer\n    clear(gl, {framebuffer: currentFramebuffer, color: true, depth: true});\n    persistenceQuad.draw({\n      framebuffer: currentFramebuffer,\n      uniforms: {\n        uScene: mainFramebuffer.texture,\n        uPersistence: nextFramebuffer.texture,\n        uRes: [width, height]\n      }\n    });\n\n    // Render to screen\n    clear(gl, {color: true, depth: true});\n    quad.draw({\n      uniforms: {\n        uTexture: currentFramebuffer.texture,\n        uRes: [width, height]\n      }\n    });\n  }\n}\n\n/* global window */\nif (typeof window !== 'undefined' && !window.website) {\n  const animationLoop = new AppAnimationLoop();\n  animationLoop.start();\n}\n","import React from 'react';\nimport AnimationLoopExamplePage from '../../src/components/animation-loop-example-page';\nimport AnimationLoop from '../../../examples/core/persistence/app';\n\nexport default class Example extends React.Component {\n  render() {\n    return (\n      <AnimationLoopExamplePage AnimationLoop={AnimationLoop} exampleConfig={this.props.pageContext.exampleConfig} />\n    );\n  }\n}\n","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport MathArray from './math-array';\nimport { checkNumber } from '../../lib/validators';\nimport assert from '../../lib/assert';\n\nvar Vector = function (_MathArray) {\n  _inherits(Vector, _MathArray);\n\n  function Vector() {\n    _classCallCheck(this, Vector);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Vector).apply(this, arguments));\n  }\n\n  _createClass(Vector, [{\n    key: \"len\",\n    value: function len() {\n      return Math.sqrt(this.lengthSquared());\n    }\n  }, {\n    key: \"magnitude\",\n    value: function magnitude() {\n      return this.len();\n    }\n  }, {\n    key: \"lengthSquared\",\n    value: function lengthSquared() {\n      var length = 0;\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        length += this[i] * this[i];\n      }\n\n      return length;\n    }\n  }, {\n    key: \"magnitudeSquared\",\n    value: function magnitudeSquared() {\n      return this.lengthSquared();\n    }\n  }, {\n    key: \"distance\",\n    value: function distance(mathArray) {\n      return Math.sqrt(this.distanceSquared(mathArray));\n    }\n  }, {\n    key: \"distanceSquared\",\n    value: function distanceSquared(mathArray) {\n      var length = 0;\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        var dist = this[i] - mathArray[i];\n        length += dist * dist;\n      }\n\n      return checkNumber(length);\n    }\n  }, {\n    key: \"dot\",\n    value: function dot(mathArray) {\n      var product = 0;\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        product += this[i] * mathArray[i];\n      }\n\n      return checkNumber(product);\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize() {\n      var length = this.magnitude();\n\n      if (length !== 0) {\n        for (var i = 0; i < this.ELEMENTS; ++i) {\n          this[i] /= length;\n        }\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"multiply\",\n    value: function multiply() {\n      for (var _len = arguments.length, vectors = new Array(_len), _key = 0; _key < _len; _key++) {\n        vectors[_key] = arguments[_key];\n      }\n\n      for (var _i = 0, _vectors = vectors; _i < _vectors.length; _i++) {\n        var vector = _vectors[_i];\n\n        for (var i = 0; i < this.ELEMENTS; ++i) {\n          this[i] *= vector[i];\n        }\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"divide\",\n    value: function divide() {\n      for (var _len2 = arguments.length, vectors = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        vectors[_key2] = arguments[_key2];\n      }\n\n      for (var _i2 = 0, _vectors2 = vectors; _i2 < _vectors2.length; _i2++) {\n        var vector = _vectors2[_i2];\n\n        for (var i = 0; i < this.ELEMENTS; ++i) {\n          this[i] /= vector[i];\n        }\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"lengthSq\",\n    value: function lengthSq() {\n      return this.lengthSquared();\n    }\n  }, {\n    key: \"distanceTo\",\n    value: function distanceTo(vector) {\n      return this.distance(vector);\n    }\n  }, {\n    key: \"distanceToSquared\",\n    value: function distanceToSquared(vector) {\n      return this.distanceSquared(vector);\n    }\n  }, {\n    key: \"getComponent\",\n    value: function getComponent(i) {\n      assert(i >= 0 && i < this.ELEMENTS, 'index is out of range');\n      return checkNumber(this[i]);\n    }\n  }, {\n    key: \"setComponent\",\n    value: function setComponent(i, value) {\n      assert(i >= 0 && i < this.ELEMENTS, 'index is out of range');\n      this[i] = value;\n      return this.check();\n    }\n  }, {\n    key: \"addVectors\",\n    value: function addVectors(a, b) {\n      return this.copy(a).add(b);\n    }\n  }, {\n    key: \"subVectors\",\n    value: function subVectors(a, b) {\n      return this.copy(a).subtract(b);\n    }\n  }, {\n    key: \"multiplyVectors\",\n    value: function multiplyVectors(a, b) {\n      return this.copy(a).multiply(b);\n    }\n  }, {\n    key: \"addScaledVector\",\n    value: function addScaledVector(a, b) {\n      return this.add(new this.constructor(a).multiplyScalar(b));\n    }\n  }, {\n    key: \"x\",\n    get: function get() {\n      return this[0];\n    },\n    set: function set(value) {\n      return this[0] = checkNumber(value);\n    }\n  }, {\n    key: \"y\",\n    get: function get() {\n      return this[1];\n    },\n    set: function set(value) {\n      return this[1] = checkNumber(value);\n    }\n  }]);\n\n  return Vector;\n}(MathArray);\n\nexport { Vector as default };","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport Vector from './base/vector';\nimport { config, isArray } from '../lib/common';\nimport { checkNumber } from '../lib/validators';\nimport * as vec3 from 'gl-matrix/vec3';\nimport { vec3_transformMat2, vec3_transformMat4AsVector } from '../lib/gl-matrix-extras';\nvar ORIGIN = [0, 0, 0];\n\nvar Vector3 = function (_Vector) {\n  _inherits(Vector3, _Vector);\n\n  function Vector3() {\n    var _this;\n\n    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n    _classCallCheck(this, Vector3);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Vector3).call(this, -0, -0, -0));\n\n    if (arguments.length === 1 && isArray(x)) {\n      _this.copy(x);\n    } else {\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n        checkNumber(z);\n      }\n\n      _this[0] = x;\n      _this[1] = y;\n      _this[2] = z;\n    }\n\n    return _this;\n  }\n\n  _createClass(Vector3, [{\n    key: \"set\",\n    value: function set(x, y, z) {\n      this[0] = x;\n      this[1] = y;\n      this[2] = z;\n      return this.check();\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(array) {\n      this[0] = array[0];\n      this[1] = array[1];\n      this[2] = array[2];\n      return this.check();\n    }\n  }, {\n    key: \"fromObject\",\n    value: function fromObject(object) {\n      if (config.debug) {\n        checkNumber(object.x);\n        checkNumber(object.y);\n        checkNumber(object.z);\n      }\n\n      this[0] = object.x;\n      this[1] = object.y;\n      this[2] = object.z;\n      return this.check();\n    }\n  }, {\n    key: \"toObject\",\n    value: function toObject(object) {\n      object.x = this[0];\n      object.y = this[1];\n      object.z = this[2];\n      return object;\n    }\n  }, {\n    key: \"angle\",\n    value: function angle(vector) {\n      return vec3.angle(this, vector);\n    }\n  }, {\n    key: \"cross\",\n    value: function cross(vector) {\n      vec3.cross(this, this, vector);\n      return this.check();\n    }\n  }, {\n    key: \"rotateX\",\n    value: function rotateX(_ref) {\n      var radians = _ref.radians,\n          _ref$origin = _ref.origin,\n          origin = _ref$origin === void 0 ? ORIGIN : _ref$origin;\n      vec3.rotateX(this, this, origin, radians);\n      return this.check();\n    }\n  }, {\n    key: \"rotateY\",\n    value: function rotateY(_ref2) {\n      var radians = _ref2.radians,\n          _ref2$origin = _ref2.origin,\n          origin = _ref2$origin === void 0 ? ORIGIN : _ref2$origin;\n      vec3.rotateY(this, this, origin, radians);\n      return this.check();\n    }\n  }, {\n    key: \"rotateZ\",\n    value: function rotateZ(_ref3) {\n      var radians = _ref3.radians,\n          _ref3$origin = _ref3.origin,\n          origin = _ref3$origin === void 0 ? ORIGIN : _ref3$origin;\n      vec3.rotateZ(this, this, origin, radians);\n      return this.check();\n    }\n  }, {\n    key: \"transform\",\n    value: function transform(matrix4) {\n      return this.transformAsPoint(matrix4);\n    }\n  }, {\n    key: \"transformAsPoint\",\n    value: function transformAsPoint(matrix4) {\n      vec3.transformMat4(this, this, matrix4);\n      return this.check();\n    }\n  }, {\n    key: \"transformAsVector\",\n    value: function transformAsVector(matrix4) {\n      vec3_transformMat4AsVector(this, this, matrix4);\n      return this.check();\n    }\n  }, {\n    key: \"transformByMatrix3\",\n    value: function transformByMatrix3(matrix3) {\n      vec3.transformMat3(this, this, matrix3);\n      return this.check();\n    }\n  }, {\n    key: \"transformByMatrix2\",\n    value: function transformByMatrix2(matrix2) {\n      vec3_transformMat2(this, this, matrix2);\n      return this.check();\n    }\n  }, {\n    key: \"transformByQuaternion\",\n    value: function transformByQuaternion(quaternion) {\n      vec3.transformQuat(this, this, quaternion);\n      return this.check();\n    }\n  }, {\n    key: \"ELEMENTS\",\n    get: function get() {\n      return 3;\n    }\n  }, {\n    key: \"z\",\n    get: function get() {\n      return this[2];\n    },\n    set: function set(value) {\n      return this[2] = checkNumber(value);\n    }\n  }]);\n\n  return Vector3;\n}(Vector);\n\nexport { Vector3 as default };"],"sourceRoot":""}