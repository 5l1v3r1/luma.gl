{"version":3,"sources":["webpack:///../modules/core/src/scenegraph/nodes/model-node.js","webpack:///../modules/core/src/geometries/sphere-geometry.js","webpack:///../modules/core/src/scenegraph/nodes/scenegraph-node.js","webpack:///../modules/core/src/geometries/cube-geometry.js","webpack:///../examples/lessons/16/app.js","webpack:///./templates/lessons/example-16.jsx","webpack:///../node_modules/math.gl/dist/esm/classes/base/vector.js","webpack:///../node_modules/math.gl/dist/esm/classes/vector3.js"],"names":["ModelNode","props","gl","setProps","this","_setModelNodeProps","delete","model","managedResources","forEach","resource","draw","setUniforms","setAttributes","updateModuleSettings","ScenegraphNode","SphereGeometry","id","uid","nlat","nlong","radius","latRange","Math","longRange","numVertices","value","positions","Float32Array","normals","texCoords","indices","Uint16Array","y","x","u","v","index","i2","i3","theta","phi","sinTheta","cosTheta","sinPhi","cosPhi","ux","uy","uz","r","numVertsAround","size","attributes","POSITION","NORMAL","TEXCOORD_0","tesselateSphere","Geometry","constructor","display","position","rotation","scale","matrix","userData","_setScenegraphNodeProps","toString","setPosition","assert","setRotation","setScale","setMatrix","copyMatrix","copy","setMatrixComponents","update","updateMatrix","pos","rot","identity","translate","rotateXYZ","getCoordinateUniforms","modelMatrix","worldMatrix","worldInverse","worldInverseTranspose","viewMatrix","objectMatrix","worldInverseMatrix","worldInverseTransposeMatrix","Object","CUBE_INDICES","CUBE_POSITIONS","CUBE_NORMALS","CUBE_TEX_COORDS","ATTRIBUTES","CubeGeometry","squareGeometry","drawMode","GL","colors","RENDER_SQUARE","VERTEX_SHADER","FRAGMENT_SHADER","DISABLE_FB","FB_WIDTH","FB_HEIGHT","moonAngle","cubeAngle","laptopAngle","moonAngleDelta","cubeAngleDelta","laptopAngleDelta","AppAnimationLoop","getInfo","onInitialize","canvas","setParameters","clearColor","clearDepth","depthTest","depthFunc","LEQUAL","tMoon","data","parameters","mipmap","tCrate","macbookJSON","program","vs","fs","macbook","opts","file","json","JSON","parseJSON","modelOptions","Array","key","geometry","parseModel","uniforms","uMaterialAmbientColor","uMaterialDiffuseColor","uMaterialSpecularColor","uMaterialShininess","uMaterialEmissiveColor","uShowSpecularHighlights","uPointLightingLocation","uAmbientLightingColor","uPointLightingDiffuseColor","uPointLightingSpecularColor","moon","uUseTextures","uSampler","cube","rttTexture","format","type","border","mipmaps","width","height","dataFormat","RGBA","renderbuffer","rttFramebuffer","attachments","setupFramebuffer","laptopScreenModel","POSITIONS","NORMALS","TEXCOORDS","TRIANGLE_STRIP","generateLaptopScreenModel","programSQ","tSquare","onRender","aspect","tick","uMVMatrix","uPMatrix","eye","near","far","generateTextureForLaptopScreen","texture","drawOuterScene","AnimationLoop","window","animationLoop","Example","render","exampleConfig","pageContext","React","Component","_MathArray","Vector","apply","arguments","sqrt","lengthSquared","len","length","i","ELEMENTS","mathArray","distanceSquared","dist","product","magnitude","check","_len","vectors","_key","_i","_vectors","vector","_len2","_key2","_i2","_vectors2","distance","a","b","add","subtract","multiply","multiplyScalar","get","set","ORIGIN","_Vector","Vector3","_this","undefined","z","call","debug","array","object","vec3","_ref","radians","_ref$origin","origin","_ref2","_ref2$origin","_ref3","_ref3$origin","matrix4","transformAsPoint","matrix3","matrix2","quaternion"],"mappings":"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","file":"component---templates-lessons-example-16-jsx-72eddc98f08f915de210.js","sourcesContent":["import Model from '../../lib/model';\nimport ScenegraphNode from './scenegraph-node';\n\nexport default class ModelNode extends ScenegraphNode {\n  constructor(gl, props = {}) {\n    super(props);\n\n    // pverride callbacks to make sure we call them with this\n    this.onBeforeRender = null;\n    this.AfterRender = null;\n\n    // Create new Model or used supplied Model\n    if (gl instanceof Model) {\n      this.model = gl;\n      this._setModelNodeProps(props);\n    } else {\n      this.model = new Model(gl, props);\n    }\n\n    this.managedResources = props.managedResources || [];\n  }\n\n  setProps(props) {\n    super.setProps(props);\n    this._setModelNodeProps(props);\n    return this;\n  }\n\n  delete() {\n    if (this.model) {\n      this.model.delete();\n      this.model = null;\n    }\n\n    this.managedResources.forEach(resource => resource.delete());\n    this.managedResources = [];\n  }\n\n  // Forward node methods\n  draw(...args) {\n    // Return value indicates if something was actually drawn\n    return this.model.draw(...args);\n  }\n\n  setUniforms(...args) {\n    this.model.setUniforms(...args);\n    return this;\n  }\n\n  setAttributes(...args) {\n    this.model.setAttributes(...args);\n    return this;\n  }\n\n  updateModuleSettings(...args) {\n    this.model.updateModuleSettings(...args);\n    return this;\n  }\n\n  // PRIVATE\n\n  _setModelNodeProps(props) {\n    this.model.setProps(props);\n  }\n}\n","import Geometry from '../geometry/geometry';\nimport {uid} from '../utils';\n\nexport default class SphereGeometry extends Geometry {\n  constructor(props = {}) {\n    const {id = uid('sphere-geometry')} = props;\n    const {indices, attributes} = tesselateSphere(props);\n    super({\n      ...props,\n      id,\n      indices,\n      attributes: {...attributes, ...props.attributes}\n    });\n  }\n}\n\n// Primitives inspired by TDL http://code.google.com/p/webglsamples/,\n// copyright 2011 Google Inc. new BSD License\n// (http://www.opensource.org/licenses/bsd-license.php).\n/* eslint-disable max-statements, complexity */\nfunction tesselateSphere(props) {\n  const {nlat = 10, nlong = 10} = props;\n  let {radius = 1} = props;\n\n  const startLat = 0;\n  const endLat = Math.PI;\n  const latRange = endLat - startLat;\n  const startLong = 0;\n  const endLong = 2 * Math.PI;\n  const longRange = endLong - startLong;\n  const numVertices = (nlat + 1) * (nlong + 1);\n\n  if (typeof radius === 'number') {\n    const value = radius;\n    radius = (n1, n2, n3, u, v) => value;\n  }\n\n  const positions = new Float32Array(numVertices * 3);\n  const normals = new Float32Array(numVertices * 3);\n  const texCoords = new Float32Array(numVertices * 2);\n  const indices = new Uint16Array(nlat * nlong * 6);\n\n  // Create positions, normals and texCoords\n  for (let y = 0; y <= nlat; y++) {\n    for (let x = 0; x <= nlong; x++) {\n      const u = x / nlong;\n      const v = y / nlat;\n\n      const index = x + y * (nlong + 1);\n      const i2 = index * 2;\n      const i3 = index * 3;\n\n      const theta = longRange * u;\n      const phi = latRange * v;\n      const sinTheta = Math.sin(theta);\n      const cosTheta = Math.cos(theta);\n      const sinPhi = Math.sin(phi);\n      const cosPhi = Math.cos(phi);\n      const ux = cosTheta * sinPhi;\n      const uy = cosPhi;\n      const uz = sinTheta * sinPhi;\n\n      const r = radius(ux, uy, uz, u, v);\n\n      positions[i3 + 0] = r * ux;\n      positions[i3 + 1] = r * uy;\n      positions[i3 + 2] = r * uz;\n\n      normals[i3 + 0] = ux;\n      normals[i3 + 1] = uy;\n      normals[i3 + 2] = uz;\n\n      texCoords[i2 + 0] = u;\n      texCoords[i2 + 1] = 1 - v;\n    }\n  }\n\n  // Create indices\n  const numVertsAround = nlat + 1;\n  for (let x = 0; x < nlat; x++) {\n    for (let y = 0; y < nlong; y++) {\n      const index = (x * nlong + y) * 6;\n\n      indices[index + 0] = y * numVertsAround + x;\n      indices[index + 1] = y * numVertsAround + x + 1;\n      indices[index + 2] = (y + 1) * numVertsAround + x;\n\n      indices[index + 3] = (y + 1) * numVertsAround + x;\n      indices[index + 4] = y * numVertsAround + x + 1;\n      indices[index + 5] = (y + 1) * numVertsAround + x + 1;\n    }\n  }\n\n  return {\n    indices: {size: 1, value: indices},\n    attributes: {\n      POSITION: {size: 3, value: positions},\n      NORMAL: {size: 3, value: normals},\n      TEXCOORD_0: {size: 2, value: texCoords}\n    }\n  };\n}\n","import {Vector3, Matrix4} from 'math.gl';\nimport {assert, uid} from '../../utils';\n\nexport default class ScenegraphNode {\n  constructor(props = {}) {\n    const {id} = props;\n\n    this.id = id || uid(this.constructor.name);\n\n    this.display = true; // whether to display the object at all\n    this.position = new Vector3();\n    this.rotation = new Vector3();\n    this.scale = new Vector3(1, 1, 1);\n    this.matrix = new Matrix4();\n    this.userData = {};\n\n    this.props = {};\n    this._setScenegraphNodeProps(props);\n  }\n\n  delete() {}\n\n  setProps(props) {\n    this._setScenegraphNodeProps(props);\n    return this;\n  }\n\n  toString() {\n    return `{type: ScenegraphNode, id: ${this.id})}`;\n  }\n\n  setPosition(position) {\n    assert(position.length === 3, 'setPosition requires vector argument');\n    this.position = position;\n    return this;\n  }\n\n  setRotation(rotation) {\n    assert(rotation.length === 3, 'setRotation requires vector argument');\n    this.rotation = rotation;\n    return this;\n  }\n\n  setScale(scale) {\n    assert(scale.length === 3, 'setScale requires vector argument');\n    this.scale = scale;\n    return this;\n  }\n\n  setMatrix(matrix, copyMatrix = true) {\n    if (copyMatrix) {\n      this.matrix.copy(matrix);\n    } else {\n      this.matrix = matrix;\n    }\n  }\n\n  setMatrixComponents({position, rotation, scale, update = true}) {\n    if (position) {\n      this.setPosition(position);\n    }\n    if (rotation) {\n      this.setRotation(rotation);\n    }\n    if (scale) {\n      this.setScale(scale);\n    }\n    if (update) {\n      this.updateMatrix();\n    }\n    return this;\n  }\n\n  updateMatrix() {\n    const pos = this.position;\n    const rot = this.rotation;\n    const scale = this.scale;\n\n    this.matrix.identity();\n    this.matrix.translate(pos);\n    this.matrix.rotateXYZ(rot);\n    this.matrix.scale(scale);\n    return this;\n  }\n\n  update({position, rotation, scale} = {}) {\n    if (position) {\n      this.setPosition(position);\n    }\n    if (rotation) {\n      this.setRotation(rotation);\n    }\n    if (scale) {\n      this.setScale(scale);\n    }\n    this.updateMatrix();\n    return this;\n  }\n\n  getCoordinateUniforms(viewMatrix, modelMatrix) {\n    // TODO - solve multiple class problem\n    // assert(viewMatrix instanceof Matrix4);\n    assert(viewMatrix);\n    modelMatrix = modelMatrix || this.matrix;\n    const worldMatrix = new Matrix4(viewMatrix).multiplyRight(modelMatrix);\n    const worldInverse = worldMatrix.invert();\n    const worldInverseTranspose = worldInverse.transpose();\n\n    return {\n      viewMatrix,\n      modelMatrix,\n      objectMatrix: modelMatrix,\n      worldMatrix,\n      worldInverseMatrix: worldInverse,\n      worldInverseTransposeMatrix: worldInverseTranspose\n    };\n  }\n\n  // TODO - copied code, not yet vetted\n  /*\n  transform() {\n    if (!this.parent) {\n      this.endPosition.set(this.position);\n      this.endRotation.set(this.rotation);\n      this.endScale.set(this.scale);\n    } else {\n      const parent = this.parent;\n      this.endPosition.set(this.position.add(parent.endPosition));\n      this.endRotation.set(this.rotation.add(parent.endRotation));\n      this.endScale.set(this.scale.add(parent.endScale));\n    }\n\n    const ch = this.children;\n    for (let i = 0; i < ch.length; ++i) {\n      ch[i].transform();\n    }\n\n    return this;\n  }\n  */\n\n  _setScenegraphNodeProps(props) {\n    if ('display' in props) {\n      this.display = props.display;\n    }\n\n    if ('position' in props) {\n      this.setPosition(props.position);\n    }\n    if ('rotation' in props) {\n      this.setRotation(props.rotation);\n    }\n    if ('scale' in props) {\n      this.setScale(props.scale);\n    }\n\n    // Matrix overwrites other props\n    if ('matrix' in props) {\n      this.setMatrix(props.matrix);\n    }\n\n    Object.assign(this.props, props);\n  }\n}\n","import Geometry from '../geometry/geometry';\nimport {uid} from '../utils';\n\n// prettier-ignore\nconst CUBE_INDICES = new Uint16Array([\n  0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 8, 9, 10, 8, 10, 11, 12, 13,\n  14, 12, 14, 15, 16, 17, 18, 16, 18, 19, 20, 21, 22, 20, 22, 23\n]);\n\n// prettier-ignore\nconst CUBE_POSITIONS = new Float32Array([\n  -1,  -1,  1, 1,  -1,  1,  1,  1,  1,  -1,  1,  1,\n  -1,  -1,  -1,  -1,  1,  -1,  1,  1,  -1,  1,  -1,  -1,\n  -1,  1,  -1,  -1,  1,  1,  1,  1,  1,  1,  1,  -1,\n  -1,  -1,  -1,  1,  -1,  -1,  1,  -1,  1,  -1,  -1,  1,\n  1,  -1,  -1,  1,  1,  -1,  1,  1,  1,  1,  -1,  1,\n  -1,  -1,  -1,  -1,  -1,  1,  -1,  1,  1,  -1,  1,  -1\n]);\n\n// TODO - could be Uint8\n// prettier-ignore\nconst CUBE_NORMALS = new Float32Array([\n  // Front face\n  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,\n  // Back face\n  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,\n  // Top face\n  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,\n  // Bottom face\n  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,\n  // Right face\n  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,\n  // Left face\n  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0\n]);\n\n// prettier-ignore\nconst CUBE_TEX_COORDS = new Float32Array([\n  // Front face\n  0,  0,  1,  0,  1,  1,  0,  1,\n  // Back face\n  1,  0,  1,  1,  0,  1,  0,  0,\n  // Top face\n  0,  1,  0,  0,  1,  0,  1,  1,\n  // Bottom face\n  1,  1,  0,  1,  0,  0,  1,  0,\n  // Right face\n  1,  0,  1,  1,  0,  1,  0,  0,\n  // Left face\n  0,  0,  1,  0,  1,  1,  0,  1\n]);\n\nconst ATTRIBUTES = {\n  POSITION: {size: 3, value: new Float32Array(CUBE_POSITIONS)},\n  NORMAL: {size: 3, value: new Float32Array(CUBE_NORMALS)},\n  TEXCOORD_0: {size: 2, value: new Float32Array(CUBE_TEX_COORDS)}\n};\n\nexport default class CubeGeometry extends Geometry {\n  constructor(props = {}) {\n    const {id = uid('cube-geometry')} = props;\n    super({\n      ...props,\n      id,\n      indices: {size: 1, value: new Uint16Array(CUBE_INDICES)},\n      attributes: {...ATTRIBUTES, ...props.attributes}\n    });\n  }\n}\n","// TODO: Remaining issues\n// 1. Specular highlights don not match with example:\n//    verify light position relative to moon/cube\n// 2. Fix positioning (translations) of moon and cube.\n// 3. Match laptopScreen uniforms with the example.\n// 4. Match zNear/zFar values with example on all cases.\n// 5. Verify lookAt matrix used. (do we need it?)\n\n/* eslint-disable max-statements, indent, no-multi-spaces */\nimport GL from '@luma.gl/constants';\nimport {\n  AnimationLoop,\n  Model,\n  Geometry,\n  Texture2D,\n  Program,\n  Renderbuffer,\n  Framebuffer,\n  setParameters,\n  loadFile,\n  ModelNode,\n  CubeGeometry,\n  SphereGeometry\n} from '@luma.gl/core';\nimport {Matrix4} from 'math.gl';\n\nconst INFO_HTML = `\n<p>\n  <a href=\"http://learningwebgl.com/blog/?p=1786\" target=\"_blank\">\n    Rendering to textures\n  </a>\n\n  <br/>\n  <br/>\n  Laptop model adapted from\n  <a href=\"http://www.turbosquid.com/3d-models/apple-macbook-max-free/391534\">\n    this 3DS Max model by Xedium\n  </a><br/>\n  Moon texture courtesy of\n  <a href=\"http://maps.jpl.nasa.gov/\">\n    the Jet Propulsion Laboratory\n  </a>.\n\n<p>\n  The classic WebGL Lessons in luma.gl\n`;\n\n// TODO: For Debugging only, remove once rendering issues fixed.\nconst FRAGMENT_SHADER_SQ = `\\\nprecision highp float;\n\nvarying vec4 vColor;\n\nvoid main(void) {\n  gl_FragColor = vColor;\n}\n`;\nconst VERTEX_SHADER_SQ = `\\\nattribute vec3 positions;\nattribute vec4 colors;\n\nuniform mat4 uMVMatrix;\nuniform mat4 uPMatrix;\n\nvarying vec4 vColor;\n\nvoid main(void) {\n  gl_Position = uPMatrix * uMVMatrix * vec4(positions, 1.0);\n  vColor = colors;\n}\n`;\n\nconst squareGeometry = new Geometry({\n  drawMode: GL.TRIANGLE_STRIP,\n  attributes: {\n    positions: new Float32Array([1, 1, 0, -1, 1, 0, 1, -1, 0, -1, -1, 0]),\n    colors: {\n      size: 4,\n      value: new Float32Array([1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1])\n    }\n  }\n});\n\nconst RENDER_SQUARE = false;\n\nconst VERTEX_SHADER = `\\\nattribute vec3 positions;\nattribute vec3 normals;\nattribute vec2 texCoords;\n\nuniform mat4 uMVMatrix;\nuniform mat4 uPMatrix;\n\nvarying vec2 vTextureCoord;\nvarying vec3 vTransformedNormal;\nvarying vec4 vPosition;\n\n\nvoid main(void) {\n  // Perform lighting in world space\n  // we should use 'transpose(inverse(mat3(uMVMatrix)))', but\n  // 'inverse' matrix operation not supported in GLSL 1.0, for now use\n  // upper-left 3X3 matrix of model view matrix, it works since we are not\n  // doing any non-uniform scaling transormations in this example.\n  mat3 normalMatrix = mat3(uMVMatrix);\n  vPosition = uMVMatrix * vec4(positions, 1.0);\n  gl_Position = uPMatrix * vPosition;\n  vTextureCoord = texCoords;\n  vTransformedNormal = normalMatrix * normals;\n}\n`;\n\nconst FRAGMENT_SHADER = `\\\nprecision highp float;\n\nvarying vec2 vTextureCoord;\nvarying vec3 vTransformedNormal;\nvarying vec4 vPosition;\n\nuniform vec3 uMaterialAmbientColor;\nuniform vec3 uMaterialDiffuseColor;\nuniform vec3 uMaterialSpecularColor;\nuniform float uMaterialShininess;\nuniform vec3 uMaterialEmissiveColor;\nuniform bool uShowSpecularHighlights;\nuniform bool uUseTextures;\nuniform vec3 uAmbientLightingColor;\nuniform vec3 uPointLightingLocation;\nuniform vec3 uPointLightingDiffuseColor;\nuniform vec3 uPointLightingSpecularColor;\nuniform sampler2D uSampler;\n\nvoid main(void) {\n  vec3 ambientLightWeighting = uAmbientLightingColor;\n\n  vec3 lightDirection = normalize(uPointLightingLocation - vPosition.xyz);\n  vec3 normal = normalize(vTransformedNormal);\n\n  vec3 specularLightWeighting = vec3(0.0, 0.0, 0.0);\n  if (uShowSpecularHighlights) {\n    vec3 eyeDirection = normalize(-vPosition.xyz);\n    vec3 reflectionDirection = reflect(-lightDirection, normal);\n\n    float specularLightBrightness =\n      pow(max(dot(reflectionDirection, eyeDirection), 0.0), uMaterialShininess);\n    specularLightWeighting = uPointLightingSpecularColor * specularLightBrightness;\n  }\n\n  float diffuseLightBrightness = max(dot(normal, lightDirection), 0.0);\n  vec3 diffuseLightWeighting = uPointLightingDiffuseColor * diffuseLightBrightness;\n\n  vec3 materialAmbientColor = uMaterialAmbientColor;\n  vec3 materialDiffuseColor = uMaterialDiffuseColor;\n  vec3 materialSpecularColor = uMaterialSpecularColor;\n  vec3 materialEmissiveColor = uMaterialEmissiveColor;\n  float alpha = 1.0;\n  if (uUseTextures) {\n    vec4 textureColor = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));\n    materialAmbientColor = materialAmbientColor * textureColor.rgb;\n    materialDiffuseColor = materialDiffuseColor * textureColor.rgb;\n    materialEmissiveColor = materialEmissiveColor * textureColor.rgb;\n    alpha = textureColor.a;\n  }\n  gl_FragColor = vec4(\n    materialAmbientColor * ambientLightWeighting\n    + materialDiffuseColor * diffuseLightWeighting\n    + materialSpecularColor * specularLightWeighting\n    + materialEmissiveColor,\n    alpha\n  );\n}\n`;\n\nlet rttFramebuffer;\nlet rttTexture;\n\nconst DISABLE_FB = false;\nconst FB_WIDTH = 512;\nconst FB_HEIGHT = 512;\n\nlet moonAngle = 0.0;\nlet cubeAngle = Math.PI;\nlet laptopAngle = 0.0;\nconst moonAngleDelta = 0.01; // * Math.PI / 180.0;\nconst cubeAngleDelta = 0.01; // * Math.PI / 180.0;\nconst laptopAngleDelta = -0.002; // * Math.PI / 180.0;\n\nexport default class AppAnimationLoop extends AnimationLoop {\n  static getInfo() {\n    return INFO_HTML;\n  }\n\n  onInitialize({canvas, gl}) {\n    setParameters(gl, {\n      clearColor: [0, 0, 0, 1],\n      clearDepth: 1,\n      depthTest: true,\n      depthFunc: GL.LEQUAL\n    });\n\n    const tMoon = new Texture2D(gl, {\n      data: 'moon.gif',\n      parameters: {\n        [gl.TEXTURE_MAG_FILTER]: gl.LINEAR,\n        [gl.TEXTURE_MIN_FILTER]: gl.LINEAR_MIPMAP_NEAREST\n      },\n      mipmap: true\n    });\n\n    const tCrate = new Texture2D(gl, {\n      data: 'crate.gif',\n      parameters: {\n        [gl.TEXTURE_MAG_FILTER]: gl.LINEAR,\n        [gl.TEXTURE_MIN_FILTER]: gl.LINEAR_MIPMAP_NEAREST\n      },\n      mipmap: true\n    });\n\n    return loadFile('macbook.json').then(macbookJSON => {\n      // Fix attribute name to match with Shaders\n      macbookJSON = macbookJSON.replace('vertices', 'positions');\n      const program = new Program(gl, {vs: VERTEX_SHADER, fs: FRAGMENT_SHADER});\n      const macbook = parseModel(gl, {\n        id: 'macbook',\n        file: macbookJSON,\n        program,\n        uniforms: Object.assign({}, getLaptopUniforms(), getLightUniforms())\n      });\n\n      const moon = new ModelNode(gl, {\n        geometry: new SphereGeometry({\n          nlat: 30,\n          nlong: 30,\n          radius: 2\n        }),\n        vs: VERTEX_SHADER,\n        fs: FRAGMENT_SHADER,\n        uniforms: Object.assign(\n          {uUseTextures: true, uSampler: tMoon},\n          getMoonCubeUniforms(),\n          getLightUniforms()\n        )\n      });\n\n      const cube = new ModelNode(gl, {\n        id: 'cube-model',\n        geometry: new CubeGeometry(),\n        vs: VERTEX_SHADER,\n        fs: FRAGMENT_SHADER,\n        uniforms: Object.assign(\n          {uUseTextures: true, uSampler: tCrate},\n          getMoonCubeUniforms(),\n          getLightUniforms()\n        )\n      });\n      setupFramebuffer(gl);\n      const laptopScreenModel = generateLaptopScreenModel(gl);\n\n      // TODO: Square program/model for debugging only, remove once all rendering issues resolved\n      const programSQ = new Program(gl, {vs: VERTEX_SHADER_SQ, fs: FRAGMENT_SHADER_SQ});\n      const tSquare = new Model(gl, {geometry: squareGeometry, program: programSQ});\n\n      return {moon, macbook, cube, laptopScreenModel, tCrate, tSquare};\n    });\n  }\n\n  onRender({gl, tick, aspect, moon, macbook, cube, laptopScreenModel, canvas, tCrate, tSquare}) {\n    generateTextureForLaptopScreen(gl, tick, aspect, moon, cube, tSquare);\n    if (!DISABLE_FB) {\n      drawOuterScene(gl, tick, aspect, macbook, laptopScreenModel, canvas, tCrate);\n    }\n  }\n}\n\nfunction getLaptopUniforms() {\n  return {\n    uMaterialAmbientColor: [1.0, 1.0, 1.0],\n    uMaterialDiffuseColor: [1.0, 1.0, 1.0],\n    uMaterialSpecularColor: [1.5, 1.5, 1.5],\n    uMaterialShininess: 5.0,\n    uMaterialEmissiveColor: [0, 0, 0],\n    uShowSpecularHighlights: true,\n    uPointLightingLocation: [-1, 2, -1]\n  };\n}\n\nfunction getMoonCubeUniforms() {\n  return {\n    uMaterialAmbientColor: [1.0, 1.0, 1.0],\n    uMaterialDiffuseColor: [1.0, 1.0, 1.0],\n    uMaterialSpecularColor: [0.0, 0.0, 0.0],\n    uMaterialShininess: 0.0,\n    uMaterialEmissiveColor: [0.0, 0.0, 0.0],\n    uShowSpecularHighlights: false,\n    uPointLightingLocation: [0, 0, -5]\n  };\n}\n\nfunction getLaptopScreenUniforms() {\n  return {\n    uMaterialAmbientColor: [1.0, 1.0, 1.0], // [0, 0, 0],\n    uMaterialDiffuseColor: [1.0, 1.0, 1.0], // [0, 0, 0],\n    uMaterialSpecularColor: [0.5, 0.5, 0.5],\n    uMaterialShininess: 20.0,\n    uMaterialEmissiveColor: [0.0, 0.0, 0.0],\n    uShowSpecularHighlights: true,\n    uPointLightingLocation: [1.5, 1.5, 1.5]\n  };\n}\nfunction getLightUniforms() {\n  return {\n    uAmbientLightingColor: [0.2, 0.2, 0.2],\n    uPointLightingDiffuseColor: [0.8, 0.8, 0.8],\n    uPointLightingSpecularColor: [0.8, 0.8, 0.8]\n  };\n}\n\nfunction generateLaptopScreenModel(gl) {\n  const POSITIONS = new Float32Array([\n    0.580687,\n    0.659,\n    0.813106,\n    -0.580687,\n    0.659,\n    0.813107,\n    0.580687,\n    0.472,\n    0.113121,\n    -0.580687,\n    0.472,\n    0.113121\n  ]);\n  const NORMALS = new Float32Array([\n    0.0,\n    -0.965926,\n    0.258819,\n    0.0,\n    -0.965926,\n    0.258819,\n    0.0,\n    -0.965926,\n    0.258819,\n    0.0,\n    -0.965926,\n    0.258819\n  ]);\n  const TEXCOORDS = new Float32Array([1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0]);\n\n  const geometry = new Geometry({\n    id: 'laptopscreen-geometry',\n    attributes: {\n      positions: POSITIONS,\n      normals: NORMALS,\n      texCoords: TEXCOORDS\n    },\n    drawMode: GL.TRIANGLE_STRIP\n  });\n\n  const model = new Model(gl, {\n    gl,\n    id: 'laptopscreen-model',\n    geometry,\n    vs: VERTEX_SHADER,\n    fs: FRAGMENT_SHADER,\n    uniforms: Object.assign({uUseTextures: true}, getLaptopScreenUniforms(), getLightUniforms())\n  });\n\n  return model;\n}\n\nfunction setupFramebuffer(gl) {\n  rttTexture = new Texture2D(gl, {\n    data: null,\n    format: GL.RGBA,\n    type: GL.UNSIGNED_BYTE,\n    border: 0,\n    mipmaps: true,\n    parameters: {\n      [GL.TEXTURE_MAG_FILTER]: GL.NEAREST, // GL.LINEAR,\n      [GL.TEXTURE_MIN_FILTER]: GL.NEAREST // GL.LINEAR_MIPMAP_NEAREST\n    },\n    width: FB_WIDTH,\n    height: FB_HEIGHT,\n    dataFormat: GL.RGBA\n  });\n\n  const renderbuffer = new Renderbuffer(gl, {\n    format: GL.DEPTH_COMPONENT16,\n    width: FB_WIDTH,\n    height: FB_HEIGHT\n  });\n\n  rttFramebuffer = new Framebuffer(gl, {\n    width: FB_WIDTH,\n    height: FB_HEIGHT,\n    attachments: {\n      [GL.COLOR_ATTACHMENT0]: rttTexture,\n      [GL.DEPTH_ATTACHMENT]: renderbuffer\n    }\n  });\n\n  if (DISABLE_FB === true) {\n    rttFramebuffer = null;\n  }\n}\n\n// eslint-disable-next-line max-params\nfunction generateTextureForLaptopScreen(gl, tick, aspect, moon, cube, tSquare) {\n  moonAngle += moonAngleDelta;\n  cubeAngle += cubeAngleDelta;\n  gl.viewport(0, 0, FB_WIDTH, FB_HEIGHT);\n\n  if (!DISABLE_FB) {\n    rttFramebuffer.bind();\n  }\n\n  gl.clear(GL.COLOR_BUFFER_BIT | GL.DEPTH_BUFFER_BIT);\n\n  // Rendering square for dubgging only, remove once all issues are resolved.\n  if (RENDER_SQUARE) {\n    // Draw Square\n    tSquare\n      .setPosition([0, 0, -1])\n      .updateMatrix()\n      .setUniforms({\n        uMVMatrix: tSquare.matrix,\n        uPMatrix: new Matrix4().perspective({aspect})\n      })\n      .draw();\n  } else {\n    let uMVMatrix = new Matrix4()\n      .lookAt({eye: [0, 0, 20]})\n      .translate([2, 0, 0])\n      .rotateY(moonAngle)\n      .rotateX((30 * Math.PI) / 180.0)\n      .translate([0, 0, -5])\n      .multiplyRight(moon.matrix);\n\n    moon\n      .setUniforms({\n        uMVMatrix,\n        uPMatrix: new Matrix4().perspective({aspect: FB_WIDTH / FB_HEIGHT, near: 0.1, far: 500})\n      })\n      .draw();\n\n    uMVMatrix = new Matrix4()\n      .lookAt({eye: [0, 0, 20]})\n      .translate([1, 0, 0])\n      .rotateY(cubeAngle)\n      .translate([0, 0, -5])\n      .multiplyRight(cube.matrix);\n\n    cube\n      .setUniforms({\n        uMVMatrix,\n        uPMatrix: new Matrix4().perspective({aspect: FB_WIDTH / FB_HEIGHT})\n      })\n      .draw();\n  }\n\n  if (!DISABLE_FB) {\n    rttFramebuffer.unbind();\n  }\n}\n\n// eslint-disable-next-line max-params\nfunction drawOuterScene(gl, tick, aspect, macbook, laptopScreenModel, canvas, tCrate) {\n  laptopAngle += laptopAngleDelta;\n\n  gl.viewport(0, 0, canvas.width, canvas.height);\n  gl.clear(GL.COLOR_BUFFER_BIT | GL.DEPTH_BUFFER_BIT);\n\n  const uMVMatrix = new Matrix4()\n    .lookAt({eye: [0, 0, 0]})\n    .translate([0, -0.5, -3])\n    .rotateY(laptopAngle)\n    .rotateX((-80.0 * Math.PI) / 180.0);\n\n  macbook\n    .setUniforms({\n      uMVMatrix,\n      uPMatrix: new Matrix4().perspective({aspect}),\n      uUseTextures: false\n    })\n    .draw();\n\n  laptopScreenModel\n    .setUniforms({\n      uMVMatrix,\n      uPMatrix: new Matrix4().perspective({aspect}),\n      uUseTextures: true,\n      uSampler: rttFramebuffer.texture\n    })\n    .draw();\n}\n\nfunction parseModel(gl, opts = {}) {\n  const {file, program = new Program(gl)} = opts;\n  const json = typeof file === 'string' ? parseJSON(file) : file;\n  // Remove any attributes so that we can create a geometry\n  // TODO - change format to put these in geometry sub object?\n  const attributes = {};\n  const modelOptions = {};\n  for (const key in json) {\n    const value = json[key];\n    if (Array.isArray(value)) {\n      attributes[key] = key === 'indices' ? new Uint16Array(value) : new Float32Array(value);\n    } else {\n      modelOptions[key] = value;\n    }\n  }\n\n  return new Model(\n    gl,\n    Object.assign({program, geometry: new Geometry({attributes})}, modelOptions, opts)\n  );\n}\n\nfunction parseJSON(file) {\n  try {\n    return JSON.parse(file);\n  } catch (error) {\n    throw new Error(`Failed to parse JSON: ${error}`);\n  }\n}\n\n/* global window */\nif (typeof window !== 'undefined' && !window.website) {\n  const animationLoop = new AppAnimationLoop();\n  animationLoop.start();\n}\n","import React from 'react';\nimport AnimationLoopExamplePage from '../../src/components/animation-loop-example-page';\nimport AnimationLoop from '../../../examples/lessons/16/app';\n\nexport default class Example extends React.Component {\n  render() {\n    return (\n      <AnimationLoopExamplePage AnimationLoop={AnimationLoop} exampleConfig={this.props.pageContext.exampleConfig} />\n    );\n  }\n}\n","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport MathArray from './math-array';\nimport { checkNumber } from '../../lib/validators';\nimport assert from '../../lib/assert';\n\nvar Vector = function (_MathArray) {\n  _inherits(Vector, _MathArray);\n\n  function Vector() {\n    _classCallCheck(this, Vector);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Vector).apply(this, arguments));\n  }\n\n  _createClass(Vector, [{\n    key: \"len\",\n    value: function len() {\n      return Math.sqrt(this.lengthSquared());\n    }\n  }, {\n    key: \"magnitude\",\n    value: function magnitude() {\n      return this.len();\n    }\n  }, {\n    key: \"lengthSquared\",\n    value: function lengthSquared() {\n      var length = 0;\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        length += this[i] * this[i];\n      }\n\n      return length;\n    }\n  }, {\n    key: \"magnitudeSquared\",\n    value: function magnitudeSquared() {\n      return this.lengthSquared();\n    }\n  }, {\n    key: \"distance\",\n    value: function distance(mathArray) {\n      return Math.sqrt(this.distanceSquared(mathArray));\n    }\n  }, {\n    key: \"distanceSquared\",\n    value: function distanceSquared(mathArray) {\n      var length = 0;\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        var dist = this[i] - mathArray[i];\n        length += dist * dist;\n      }\n\n      return checkNumber(length);\n    }\n  }, {\n    key: \"dot\",\n    value: function dot(mathArray) {\n      var product = 0;\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        product += this[i] * mathArray[i];\n      }\n\n      return checkNumber(product);\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize() {\n      var length = this.magnitude();\n\n      if (length !== 0) {\n        for (var i = 0; i < this.ELEMENTS; ++i) {\n          this[i] /= length;\n        }\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"multiply\",\n    value: function multiply() {\n      for (var _len = arguments.length, vectors = new Array(_len), _key = 0; _key < _len; _key++) {\n        vectors[_key] = arguments[_key];\n      }\n\n      for (var _i = 0, _vectors = vectors; _i < _vectors.length; _i++) {\n        var vector = _vectors[_i];\n\n        for (var i = 0; i < this.ELEMENTS; ++i) {\n          this[i] *= vector[i];\n        }\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"divide\",\n    value: function divide() {\n      for (var _len2 = arguments.length, vectors = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        vectors[_key2] = arguments[_key2];\n      }\n\n      for (var _i2 = 0, _vectors2 = vectors; _i2 < _vectors2.length; _i2++) {\n        var vector = _vectors2[_i2];\n\n        for (var i = 0; i < this.ELEMENTS; ++i) {\n          this[i] /= vector[i];\n        }\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"lengthSq\",\n    value: function lengthSq() {\n      return this.lengthSquared();\n    }\n  }, {\n    key: \"distanceTo\",\n    value: function distanceTo(vector) {\n      return this.distance(vector);\n    }\n  }, {\n    key: \"distanceToSquared\",\n    value: function distanceToSquared(vector) {\n      return this.distanceSquared(vector);\n    }\n  }, {\n    key: \"getComponent\",\n    value: function getComponent(i) {\n      assert(i >= 0 && i < this.ELEMENTS, 'index is out of range');\n      return checkNumber(this[i]);\n    }\n  }, {\n    key: \"setComponent\",\n    value: function setComponent(i, value) {\n      assert(i >= 0 && i < this.ELEMENTS, 'index is out of range');\n      this[i] = value;\n      return this.check();\n    }\n  }, {\n    key: \"addVectors\",\n    value: function addVectors(a, b) {\n      return this.copy(a).add(b);\n    }\n  }, {\n    key: \"subVectors\",\n    value: function subVectors(a, b) {\n      return this.copy(a).subtract(b);\n    }\n  }, {\n    key: \"multiplyVectors\",\n    value: function multiplyVectors(a, b) {\n      return this.copy(a).multiply(b);\n    }\n  }, {\n    key: \"addScaledVector\",\n    value: function addScaledVector(a, b) {\n      return this.add(new this.constructor(a).multiplyScalar(b));\n    }\n  }, {\n    key: \"x\",\n    get: function get() {\n      return this[0];\n    },\n    set: function set(value) {\n      return this[0] = checkNumber(value);\n    }\n  }, {\n    key: \"y\",\n    get: function get() {\n      return this[1];\n    },\n    set: function set(value) {\n      return this[1] = checkNumber(value);\n    }\n  }]);\n\n  return Vector;\n}(MathArray);\n\nexport { Vector as default };","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport Vector from './base/vector';\nimport { config, isArray } from '../lib/common';\nimport { checkNumber } from '../lib/validators';\nimport * as vec3 from 'gl-matrix/vec3';\nimport { vec3_transformMat2, vec3_transformMat4AsVector } from '../lib/gl-matrix-extras';\nvar ORIGIN = [0, 0, 0];\n\nvar Vector3 = function (_Vector) {\n  _inherits(Vector3, _Vector);\n\n  function Vector3() {\n    var _this;\n\n    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n    _classCallCheck(this, Vector3);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Vector3).call(this, -0, -0, -0));\n\n    if (arguments.length === 1 && isArray(x)) {\n      _this.copy(x);\n    } else {\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n        checkNumber(z);\n      }\n\n      _this[0] = x;\n      _this[1] = y;\n      _this[2] = z;\n    }\n\n    return _this;\n  }\n\n  _createClass(Vector3, [{\n    key: \"set\",\n    value: function set(x, y, z) {\n      this[0] = x;\n      this[1] = y;\n      this[2] = z;\n      return this.check();\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(array) {\n      this[0] = array[0];\n      this[1] = array[1];\n      this[2] = array[2];\n      return this.check();\n    }\n  }, {\n    key: \"fromObject\",\n    value: function fromObject(object) {\n      if (config.debug) {\n        checkNumber(object.x);\n        checkNumber(object.y);\n        checkNumber(object.z);\n      }\n\n      this[0] = object.x;\n      this[1] = object.y;\n      this[2] = object.z;\n      return this.check();\n    }\n  }, {\n    key: \"toObject\",\n    value: function toObject(object) {\n      object.x = this[0];\n      object.y = this[1];\n      object.z = this[2];\n      return object;\n    }\n  }, {\n    key: \"angle\",\n    value: function angle(vector) {\n      return vec3.angle(this, vector);\n    }\n  }, {\n    key: \"cross\",\n    value: function cross(vector) {\n      vec3.cross(this, this, vector);\n      return this.check();\n    }\n  }, {\n    key: \"rotateX\",\n    value: function rotateX(_ref) {\n      var radians = _ref.radians,\n          _ref$origin = _ref.origin,\n          origin = _ref$origin === void 0 ? ORIGIN : _ref$origin;\n      vec3.rotateX(this, this, origin, radians);\n      return this.check();\n    }\n  }, {\n    key: \"rotateY\",\n    value: function rotateY(_ref2) {\n      var radians = _ref2.radians,\n          _ref2$origin = _ref2.origin,\n          origin = _ref2$origin === void 0 ? ORIGIN : _ref2$origin;\n      vec3.rotateY(this, this, origin, radians);\n      return this.check();\n    }\n  }, {\n    key: \"rotateZ\",\n    value: function rotateZ(_ref3) {\n      var radians = _ref3.radians,\n          _ref3$origin = _ref3.origin,\n          origin = _ref3$origin === void 0 ? ORIGIN : _ref3$origin;\n      vec3.rotateZ(this, this, origin, radians);\n      return this.check();\n    }\n  }, {\n    key: \"transform\",\n    value: function transform(matrix4) {\n      return this.transformAsPoint(matrix4);\n    }\n  }, {\n    key: \"transformAsPoint\",\n    value: function transformAsPoint(matrix4) {\n      vec3.transformMat4(this, this, matrix4);\n      return this.check();\n    }\n  }, {\n    key: \"transformAsVector\",\n    value: function transformAsVector(matrix4) {\n      vec3_transformMat4AsVector(this, this, matrix4);\n      return this.check();\n    }\n  }, {\n    key: \"transformByMatrix3\",\n    value: function transformByMatrix3(matrix3) {\n      vec3.transformMat3(this, this, matrix3);\n      return this.check();\n    }\n  }, {\n    key: \"transformByMatrix2\",\n    value: function transformByMatrix2(matrix2) {\n      vec3_transformMat2(this, this, matrix2);\n      return this.check();\n    }\n  }, {\n    key: \"transformByQuaternion\",\n    value: function transformByQuaternion(quaternion) {\n      vec3.transformQuat(this, this, quaternion);\n      return this.check();\n    }\n  }, {\n    key: \"ELEMENTS\",\n    get: function get() {\n      return 3;\n    }\n  }, {\n    key: \"z\",\n    get: function get() {\n      return this[2];\n    },\n    set: function set(value) {\n      return this[2] = checkNumber(value);\n    }\n  }]);\n\n  return Vector3;\n}(Vector);\n\nexport { Vector3 as default };"],"sourceRoot":""}