{"version":3,"sources":["webpack:///../modules/core/src/scenegraph/nodes/model-node.js","webpack:///../modules/shadertools/src/modules/project/project.js","webpack:///../modules/shadertools/src/modules/dirlight/dirlight.js","webpack:///../modules/core/src/scenegraph/nodes/scenegraph-node.js","webpack:///../modules/shadertools/src/modules/picking/picking.js","webpack:///../examples/core/instancing/app.js","webpack:///./templates/core/example-instancing.jsx","webpack:///../modules/core/src/geometries/cube-geometry.js","webpack:///../node_modules/math.gl/dist/esm/classes/base/vector.js","webpack:///../node_modules/math.gl/dist/esm/classes/vector3.js","webpack:///../modules/addons/src/animation/timeline.js"],"names":["ModelNode","props","gl","setProps","this","_setModelNodeProps","delete","model","managedResources","forEach","resource","draw","setUniforms","setAttributes","updateModuleSettings","ScenegraphNode","IDENTITY_MATRIX","DEFAULT_MODULE_OPTIONS","modelMatrix","viewMatrix","projectionMatrix","cameraPositionWorld","name","getUniforms","opts","prevUniforms","uniforms","vs","common","fs","lightDirection","Float32Array","dependencies","project","id","uid","constructor","display","position","rotation","scale","matrix","userData","_setScenegraphNodeProps","toString","setPosition","assert","setRotation","setScale","setMatrix","copyMatrix","copy","setMatrixComponents","update","updateMatrix","pos","rot","identity","translate","rotateXYZ","getCoordinateUniforms","worldMatrix","worldInverse","worldInverseTranspose","objectMatrix","worldInverseMatrix","worldInverseTransposeMatrix","Object","pickingSelectedColor","pickingHighlightColor","Uint8Array","pickingThreshold","pickingActive","selectedColor","SIDE","createShaderHook","createModuleInjection","hook","injection","order","Number","POSITIVE_INFINITY","InstancedCube","offsets","i","x","j","y","pickingColors","Uint8ClampedArray","colors","Math","offsetsBuffer","colorsBuffer","pickingColorsBuffer","modules","dirlight","isInstanced","instanceCount","geometry","attributes","instanceSizes","instanceOffsets","divisor","instanceColors","instancePickingColors","AppAnimationLoop","createFramebuffer","debug","getInfo","onInitialize","_animationLoop","setParameters","clearColor","clearDepth","depthTest","depthFunc","LEQUAL","attachTimeline","timeline","play","timeChannel","addChannel","rate","eyeXChannel","eyeYChannel","eyeZChannel","cube","uTime","uProjection","aspect","fov","radians","near","far","uView","center","eye","uModel","tick","onRender","animationProps","framebuffer","_mousePosition","devicePixels","cssToDevicePixels","color","depth","picking_uActive","readPixelsToArray","sourceX","sourceY","sourceWidth","sourceHeight","sourceFormat","sourceType","UNSIGNED_BYTE","pickInstance","onFinalize","AnimationLoop","window","animationLoop","Example","render","pageContext","exampleConfig","React","Component","CUBE_INDICES","Uint16Array","CUBE_POSITIONS","CUBE_NORMALS","CUBE_TEX_COORDS","ATTRIBUTES","POSITION","size","value","NORMAL","TEXCOORD_0","CubeGeometry","indices","Geometry","_MathArray","Vector","apply","arguments","key","sqrt","lengthSquared","len","length","ELEMENTS","mathArray","distanceSquared","dist","product","magnitude","check","_len","vectors","Array","_key","_i","_vectors","vector","_len2","_key2","_i2","_vectors2","distance","a","b","add","subtract","multiply","multiplyScalar","get","set","ORIGIN","_Vector","Vector3","_this","undefined","z","call","array","object","vec3","_ref","_ref$origin","origin","_ref2","_ref2$origin","_ref3","_ref3$origin","matrix4","transformAsPoint","matrix3","matrix2","quaternion","channelHandles","animationHandles","Timeline","time","channels","animations","playing","lastEngineTime","delay","duration","handle","channel","repeat","_setChannelTime","removeChannel","animationHandle","animation","detachAnimation","isFinished","getTime","setTime","animationData","pause","reset","attachAnimation","channelHandle","engineTime","offsetTime"],"mappings":"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","file":"component---templates-core-example-instancing-jsx-796075100134ba8ca69d.js","sourcesContent":["import Model from '../../lib/model';\nimport ScenegraphNode from './scenegraph-node';\n\nexport default class ModelNode extends ScenegraphNode {\n  constructor(gl, props = {}) {\n    super(props);\n\n    // pverride callbacks to make sure we call them with this\n    this.onBeforeRender = null;\n    this.AfterRender = null;\n\n    // Create new Model or used supplied Model\n    if (gl instanceof Model) {\n      this.model = gl;\n      this._setModelNodeProps(props);\n    } else {\n      this.model = new Model(gl, props);\n    }\n\n    this.managedResources = props.managedResources || [];\n  }\n\n  setProps(props) {\n    super.setProps(props);\n    this._setModelNodeProps(props);\n    return this;\n  }\n\n  delete() {\n    if (this.model) {\n      this.model.delete();\n      this.model = null;\n    }\n\n    this.managedResources.forEach(resource => resource.delete());\n    this.managedResources = [];\n  }\n\n  // Forward node methods\n  draw(...args) {\n    // Return value indicates if something was actually drawn\n    return this.model.draw(...args);\n  }\n\n  setUniforms(...args) {\n    this.model.setUniforms(...args);\n    return this;\n  }\n\n  setAttributes(...args) {\n    this.model.setAttributes(...args);\n    return this;\n  }\n\n  updateModuleSettings(...args) {\n    this.model.updateModuleSettings(...args);\n    return this;\n  }\n\n  // PRIVATE\n\n  _setModelNodeProps(props) {\n    this.model.setProps(props);\n  }\n}\n","import {Matrix4} from 'math.gl';\n\nconst IDENTITY_MATRIX = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\nconst DEFAULT_MODULE_OPTIONS = {\n  modelMatrix: IDENTITY_MATRIX,\n  viewMatrix: IDENTITY_MATRIX,\n  projectionMatrix: IDENTITY_MATRIX,\n  cameraPositionWorld: [0, 0, 0]\n};\n\nfunction getUniforms(opts = DEFAULT_MODULE_OPTIONS, prevUniforms = {}) {\n  // const viewProjectionInverse = viewProjection.invert();\n  // viewInverseMatrix: view.invert(),\n  // viewProjectionInverseMatrix: viewProjectionInverse\n\n  const uniforms = {};\n  if (opts.modelMatrix !== undefined) {\n    uniforms.modelMatrix = opts.modelMatrix;\n  }\n  if (opts.viewMatrix !== undefined) {\n    uniforms.viewMatrix = opts.viewMatrix;\n  }\n  if (opts.projectionMatrix !== undefined) {\n    uniforms.projectionMatrix = opts.projectionMatrix;\n  }\n  if (opts.cameraPositionWorld !== undefined) {\n    uniforms.cameraPositionWorld = opts.cameraPositionWorld;\n  }\n\n  // COMPOSITE UNIFORMS\n  if (opts.projectionMatrix !== undefined || opts.viewMatrix !== undefined) {\n    uniforms.viewProjectionMatrix = new Matrix4(opts.projectionMatrix).multiplyRight(\n      opts.viewMatrix\n    );\n  }\n\n  return uniforms;\n}\n\nconst common = `\\\nvarying vec4 project_vPositionWorld;\nvarying vec3 project_vNormalWorld;\n\nvec4 project_getPosition_World() {\n  return project_vPositionWorld;\n}\n\nvec3 project_getNormal_World() {\n  return project_vNormalWorld;\n}\n`;\n\nconst vs = `\\\n${common}\n\n// Unprefixed uniforms\nuniform mat4 modelMatrix;\nuniform mat4 viewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewProjectionMatrix;\nuniform vec3 cameraPositionWorld;\n\nstruct World {\n  vec3 position;\n  vec3 normal;\n};\n\nWorld world;\n\nvoid project_setPosition(vec4 position) {\n  project_vPositionWorld = position;\n}\n\nvoid project_setNormal(vec3 normal) {\n  project_vNormalWorld = normal;\n}\n\nvoid project_setPositionAndNormal_World(vec3 position, vec3 normal) {\n  world.position = position;\n  world.normal = normal;\n}\n\nvoid project_setPositionAndNormal_Model(vec3 position, vec3 normal) {\n  world.position = (modelMatrix * vec4(position, 1.)).xyz;\n  world.normal = mat3(modelMatrix) * normal;\n}\n\nvec4 project_model_to_clipspace(vec4 position) {\n  return viewProjectionMatrix * modelMatrix * position;\n}\n\nvec4 project_model_to_clipspace(vec3 position) {\n  return viewProjectionMatrix * modelMatrix * vec4(position, 1.);\n}\n\nvec4 project_world_to_clipspace(vec3 position) {\n  return viewProjectionMatrix * vec4(position, 1.);\n}\n\nvec4 project_view_to_clipspace(vec3 position) {\n  return projectionMatrix * vec4(position, 1.);\n}\n\nvec4 project_to_clipspace(vec3 position) {\n  return viewProjectionMatrix * vec4(position, 1.);\n}\n`;\n\nconst fs = `\n${common}\\\n`;\n\nexport default {\n  name: 'project',\n  getUniforms,\n  vs,\n  fs\n};\n","// Cheap lighting - single directional light, single dot product, one uniform\n\nimport project from '../project/project';\n\n/* eslint-disable camelcase */\nconst DEFAULT_LIGHT_DIRECTION = new Float32Array([1, 1, 2]);\n\nconst DEFAULT_MODULE_OPTIONS = {\n  lightDirection: DEFAULT_LIGHT_DIRECTION\n};\n\nfunction getUniforms(opts = DEFAULT_MODULE_OPTIONS) {\n  const uniforms = {};\n  if (opts.lightDirection) {\n    uniforms.dirlight_uLightDirection = opts.lightDirection;\n  }\n  return uniforms;\n}\n\n// TODO - reuse normal from geometry module\nconst vs = null;\n\nconst fs = `\\\nuniform vec3 dirlight_uLightDirection;\n\n/*\n * Returns color attenuated by angle from light source\n */\nvec4 dirlight_filterColor(vec4 color) {\n  vec3 normal = project_getNormal_World();\n  float d = abs(dot(normalize(normal), normalize(dirlight_uLightDirection)));\n  return vec4(color.rgb * d, color.a);\n}\n`;\n\nexport default {\n  name: 'dirlight',\n  vs,\n  fs,\n  getUniforms,\n  dependencies: [project]\n};\n","import {Vector3, Matrix4} from 'math.gl';\nimport {assert, uid} from '../../utils';\n\nexport default class ScenegraphNode {\n  constructor(props = {}) {\n    const {id} = props;\n\n    this.id = id || uid(this.constructor.name);\n\n    this.display = true; // whether to display the object at all\n    this.position = new Vector3();\n    this.rotation = new Vector3();\n    this.scale = new Vector3(1, 1, 1);\n    this.matrix = new Matrix4();\n    this.userData = {};\n\n    this.props = {};\n    this._setScenegraphNodeProps(props);\n  }\n\n  delete() {}\n\n  setProps(props) {\n    this._setScenegraphNodeProps(props);\n    return this;\n  }\n\n  toString() {\n    return `{type: ScenegraphNode, id: ${this.id})}`;\n  }\n\n  setPosition(position) {\n    assert(position.length === 3, 'setPosition requires vector argument');\n    this.position = position;\n    return this;\n  }\n\n  setRotation(rotation) {\n    assert(rotation.length === 3, 'setRotation requires vector argument');\n    this.rotation = rotation;\n    return this;\n  }\n\n  setScale(scale) {\n    assert(scale.length === 3, 'setScale requires vector argument');\n    this.scale = scale;\n    return this;\n  }\n\n  setMatrix(matrix, copyMatrix = true) {\n    if (copyMatrix) {\n      this.matrix.copy(matrix);\n    } else {\n      this.matrix = matrix;\n    }\n  }\n\n  setMatrixComponents({position, rotation, scale, update = true}) {\n    if (position) {\n      this.setPosition(position);\n    }\n    if (rotation) {\n      this.setRotation(rotation);\n    }\n    if (scale) {\n      this.setScale(scale);\n    }\n    if (update) {\n      this.updateMatrix();\n    }\n    return this;\n  }\n\n  updateMatrix() {\n    const pos = this.position;\n    const rot = this.rotation;\n    const scale = this.scale;\n\n    this.matrix.identity();\n    this.matrix.translate(pos);\n    this.matrix.rotateXYZ(rot);\n    this.matrix.scale(scale);\n    return this;\n  }\n\n  update({position, rotation, scale} = {}) {\n    if (position) {\n      this.setPosition(position);\n    }\n    if (rotation) {\n      this.setRotation(rotation);\n    }\n    if (scale) {\n      this.setScale(scale);\n    }\n    this.updateMatrix();\n    return this;\n  }\n\n  getCoordinateUniforms(viewMatrix, modelMatrix) {\n    // TODO - solve multiple class problem\n    // assert(viewMatrix instanceof Matrix4);\n    assert(viewMatrix);\n    modelMatrix = modelMatrix || this.matrix;\n    const worldMatrix = new Matrix4(viewMatrix).multiplyRight(modelMatrix);\n    const worldInverse = worldMatrix.invert();\n    const worldInverseTranspose = worldInverse.transpose();\n\n    return {\n      viewMatrix,\n      modelMatrix,\n      objectMatrix: modelMatrix,\n      worldMatrix,\n      worldInverseMatrix: worldInverse,\n      worldInverseTransposeMatrix: worldInverseTranspose\n    };\n  }\n\n  // TODO - copied code, not yet vetted\n  /*\n  transform() {\n    if (!this.parent) {\n      this.endPosition.set(this.position);\n      this.endRotation.set(this.rotation);\n      this.endScale.set(this.scale);\n    } else {\n      const parent = this.parent;\n      this.endPosition.set(this.position.add(parent.endPosition));\n      this.endRotation.set(this.rotation.add(parent.endRotation));\n      this.endScale.set(this.scale.add(parent.endScale));\n    }\n\n    const ch = this.children;\n    for (let i = 0; i < ch.length; ++i) {\n      ch[i].transform();\n    }\n\n    return this;\n  }\n  */\n\n  _setScenegraphNodeProps(props) {\n    if ('display' in props) {\n      this.display = props.display;\n    }\n\n    if ('position' in props) {\n      this.setPosition(props.position);\n    }\n    if ('rotation' in props) {\n      this.setRotation(props.rotation);\n    }\n    if ('scale' in props) {\n      this.setScale(props.scale);\n    }\n\n    // Matrix overwrites other props\n    if ('matrix' in props) {\n      this.setMatrix(props.matrix);\n    }\n\n    Object.assign(this.props, props);\n  }\n}\n","const DEFAULT_HIGHLIGHT_COLOR = new Uint8Array([0, 255, 255, 255]);\n\nconst DEFAULT_MODULE_OPTIONS = {\n  pickingSelectedColor: null, //  Set to a picking color to visually highlight that item\n  pickingHighlightColor: DEFAULT_HIGHLIGHT_COLOR, // Color of visual highlight of \"selected\" item\n  pickingThreshold: 1.0,\n  pickingActive: false // Set to true when rendering to off-screen \"picking\" buffer\n};\n\n/* eslint-disable camelcase */\nfunction getUniforms(opts = DEFAULT_MODULE_OPTIONS) {\n  const uniforms = {};\n  if (opts.pickingSelectedColor !== undefined) {\n    if (opts.pickingSelectedColor === null) {\n      uniforms.picking_uSelectedColorValid = 0;\n    } else {\n      const selectedColor = [\n        opts.pickingSelectedColor[0],\n        opts.pickingSelectedColor[1],\n        opts.pickingSelectedColor[2]\n      ];\n      uniforms.picking_uSelectedColorValid = 1;\n      uniforms.picking_uSelectedColor = selectedColor;\n    }\n  }\n  if (opts.pickingHighlightColor !== undefined) {\n    uniforms.picking_uHighlightColor = opts.pickingHighlightColor;\n  }\n  // TODO - major hack - decide on normalization and remove\n  if (opts.pickingThreshold !== undefined) {\n    uniforms.picking_uThreshold = opts.pickingThreshold;\n  }\n  if (opts.pickingActive !== undefined) {\n    uniforms.picking_uActive = opts.pickingActive ? 1 : 0;\n  }\n  return uniforms;\n}\n\nconst vs = `\\\nuniform vec3 picking_uSelectedColor;\nuniform float picking_uThreshold;\nuniform bool picking_uSelectedColorValid;\n\nout vec4 picking_vRGBcolor_Aselected;\n\nconst float COLOR_SCALE = 1. / 255.;\n\nbool isVertexPicked(vec3 vertexColor) {\n  return\n    picking_uSelectedColorValid &&\n    abs(vertexColor.r - picking_uSelectedColor.r) < picking_uThreshold &&\n    abs(vertexColor.g - picking_uSelectedColor.g) < picking_uThreshold &&\n    abs(vertexColor.b - picking_uSelectedColor.b) < picking_uThreshold;\n}\n\nvoid picking_setPickingColor(vec3 pickingColor) {\n  // Do the comparison with selected item color in vertex shader as it should mean fewer compares\n  picking_vRGBcolor_Aselected.a =\n    float(isVertexPicked(pickingColor));\n\n  // Stores the picking color so that the fragment shader can render it during picking\n  picking_vRGBcolor_Aselected.rgb = pickingColor * COLOR_SCALE;\n}\n`;\n\nconst fs = `\\\nuniform bool picking_uActive; // true during rendering to offscreen picking buffer\nuniform vec3 picking_uSelectedColor;\nuniform vec4 picking_uHighlightColor;\n\nin vec4 picking_vRGBcolor_Aselected;\n\nconst float COLOR_SCALE = 1. / 255.;\n\n/*\n * Returns highlight color if this item is selected.\n */\nvec4 picking_filterHighlightColor(vec4 color) {\n  bool selected = bool(picking_vRGBcolor_Aselected.a);\n\n  if (selected) {\n    vec4 highLightColor = picking_uHighlightColor * COLOR_SCALE;\n\n    float highLightAlpha = highLightColor.a;\n    float blendedAlpha = highLightAlpha + color.a * (1.0 - highLightAlpha);\n    float highLightRatio = highLightAlpha / blendedAlpha;\n\n    vec3 blendedRGB = mix(color.rgb, highLightColor.rgb, highLightRatio);\n    return vec4(blendedRGB, blendedAlpha);\n  } else {\n    return color;\n  }\n}\n\n/*\n * Returns picking color if picking enabled else unmodified argument.\n */\nvec4 picking_filterPickingColor(vec4 color) {\n  vec3 pickingColor = picking_vRGBcolor_Aselected.rgb;\n  if (picking_uActive && length(pickingColor) < 0.001) {\n    discard;\n  }\n  return picking_uActive ? vec4(pickingColor, 1.0) : color;\n}\n\n/*\n * Returns picking color if picking is enabled if not\n * highlight color if this item is selected, otherwise unmodified argument.\n */\nvec4 picking_filterColor(vec4 color) {\n  vec4 highightColor = picking_filterHighlightColor(color);\n  return picking_filterPickingColor(highightColor);\n}\n\n`;\n\nexport default {\n  name: 'picking',\n  vs,\n  fs,\n  getUniforms\n};\n","import {\n  AnimationLoop,\n  setParameters,\n  ModelNode,\n  picking,\n  dirlight,\n  readPixelsToArray,\n  Buffer,\n  CubeGeometry,\n  createShaderHook,\n  createModuleInjection\n} from '@luma.gl/core';\nimport {Timeline} from '@luma.gl/addons';\nimport {cssToDevicePixels} from '@luma.gl/webgl';\nimport {Matrix4, radians} from 'math.gl';\n\nconst INFO_HTML = `\n<p>\nCube drawn with <b>instanced rendering</b>.\n<p>\nA luma.gl <code>Cube</code>, rendering 65,536 instances in a\nsingle GPU draw call using instanced vertex attributes.\n`;\n\nconst SIDE = 256;\n\ncreateShaderHook('vs:MY_SHADER_HOOK_pickColor(inout vec4 color)');\n\ncreateShaderHook('fs:MY_SHADER_HOOK_fragmentColor(inout vec4 color)');\n\ncreateModuleInjection('picking', {\n  hook: 'vs:MY_SHADER_HOOK_pickColor',\n  injection: 'picking_setPickingColor(color.rgb);'\n});\n\ncreateModuleInjection('dirlight', {\n  hook: 'fs:MY_SHADER_HOOK_fragmentColor',\n  injection: 'color = dirlight_filterColor(color);'\n});\n\ncreateModuleInjection('picking', {\n  hook: 'fs:MY_SHADER_HOOK_fragmentColor',\n  injection: 'color = picking_filterColor(color);',\n  order: Number.POSITIVE_INFINITY\n});\n\n// Make a cube with 65K instances and attributes to control offset and color of each instance\nclass InstancedCube extends ModelNode {\n  constructor(gl, props) {\n    let offsets = [];\n    for (let i = 0; i < SIDE; i++) {\n      const x = ((-SIDE + 1) * 3) / 2 + i * 3;\n      for (let j = 0; j < SIDE; j++) {\n        const y = ((-SIDE + 1) * 3) / 2 + j * 3;\n        offsets.push(x, y);\n      }\n    }\n    offsets = new Float32Array(offsets);\n\n    const pickingColors = new Uint8ClampedArray(SIDE * SIDE * 2);\n    for (let i = 0; i < SIDE; i++) {\n      for (let j = 0; j < SIDE; j++) {\n        pickingColors[(i * SIDE + j) * 2 + 0] = i;\n        pickingColors[(i * SIDE + j) * 2 + 1] = j;\n      }\n    }\n\n    const colors = new Float32Array(SIDE * SIDE * 3).map(() => Math.random() * 0.75 + 0.25);\n\n    const vs = `\\\nattribute float instanceSizes;\nattribute vec3 positions;\nattribute vec3 normals;\nattribute vec2 instanceOffsets;\nattribute vec3 instanceColors;\nattribute vec2 instancePickingColors;\n\nuniform mat4 uModel;\nuniform mat4 uView;\nuniform mat4 uProjection;\nuniform float uTime;\n\nvarying vec3 color;\n\nvoid main(void) {\n  vec3 normal = vec3(uModel * vec4(normals, 1.0));\n\n  // Set up data for modules\n  color = instanceColors;\n  project_setNormal(normal);\n  vec4 pickColor = vec4(0., instancePickingColors, 1.0);\n  MY_SHADER_HOOK_pickColor(pickColor);\n\n  // Vertex position (z coordinate undulates with time), and model rotates around center\n  float delta = length(instanceOffsets);\n  vec4 offset = vec4(instanceOffsets, sin((uTime + delta) * 0.1) * 16.0, 0);\n  gl_Position = uProjection * uView * (uModel * vec4(positions * instanceSizes, 1.0) + offset);\n}\n`;\n    const fs = `\\\nprecision highp float;\n\nvarying vec3 color;\n\nvoid main(void) {\n  gl_FragColor = vec4(color, 1.);\n  MY_SHADER_HOOK_fragmentColor(gl_FragColor);\n}\n`;\n\n    const offsetsBuffer = new Buffer(gl, offsets);\n    const colorsBuffer = new Buffer(gl, colors);\n    const pickingColorsBuffer = new Buffer(gl, pickingColors);\n\n    super(\n      gl,\n      Object.assign({}, props, {\n        vs,\n        fs,\n        modules: [dirlight, picking],\n        isInstanced: 1,\n        instanceCount: SIDE * SIDE,\n        geometry: new CubeGeometry(),\n        attributes: {\n          instanceSizes: new Float32Array([1]), // Constant attribute\n          instanceOffsets: [offsetsBuffer, {divisor: 1}],\n          instanceColors: [colorsBuffer, {divisor: 1}],\n          instancePickingColors: [pickingColorsBuffer, {divisor: 1}]\n        }\n      })\n    );\n  }\n}\n\nexport default class AppAnimationLoop extends AnimationLoop {\n  constructor() {\n    super({createFramebuffer: true, debug: true});\n  }\n\n  static getInfo() {\n    return INFO_HTML;\n  }\n\n  onInitialize({gl, _animationLoop}) {\n    setParameters(gl, {\n      clearColor: [0, 0, 0, 1],\n      clearDepth: 1,\n      depthTest: true,\n      depthFunc: gl.LEQUAL\n    });\n\n    this.attachTimeline(new Timeline());\n    this.timeline.play();\n\n    const timeChannel = this.timeline.addChannel({\n      rate: 0.01\n    });\n\n    const eyeXChannel = this.timeline.addChannel({\n      rate: 0.0003\n    });\n\n    const eyeYChannel = this.timeline.addChannel({\n      rate: 0.0004\n    });\n\n    const eyeZChannel = this.timeline.addChannel({\n      rate: 0.0002\n    });\n\n    this.cube = new InstancedCube(gl, {\n      _animationLoop,\n      // inject: {\n      //   'fs:#main-end': 'gl_FragColor = picking_filterColor(gl_FragColor)'\n      // },\n      uniforms: {\n        uTime: () => this.timeline.getTime(timeChannel),\n        // Basic projection matrix\n        uProjection: ({aspect}) =>\n          new Matrix4().perspective({fov: radians(60), aspect, near: 1, far: 2048.0}),\n        // Move the eye around the plane\n        uView: () =>\n          new Matrix4().lookAt({\n            center: [0, 0, 0],\n            eye: [\n              (Math.cos(this.timeline.getTime(eyeXChannel)) * SIDE) / 2,\n              (Math.sin(this.timeline.getTime(eyeYChannel)) * SIDE) / 2,\n              ((Math.sin(this.timeline.getTime(eyeZChannel)) + 1) * SIDE) / 4 + 32\n            ]\n          }),\n        // Rotate all the individual cubes\n        uModel: ({tick}) => new Matrix4().rotateX(tick * 0.01).rotateY(tick * 0.013)\n      }\n    });\n  }\n\n  onRender(animationProps) {\n    const {gl} = animationProps;\n\n    const {framebuffer, _mousePosition} = animationProps;\n\n    if (_mousePosition) {\n      // use the center pixel location in device pixel range\n      const devicePixels = cssToDevicePixels(gl, _mousePosition);\n      const deviceX = devicePixels.x + Math.floor(devicePixels.width / 2);\n      const deviceY = devicePixels.y + Math.floor(devicePixels.height / 2);\n\n      pickInstance(gl, deviceX, deviceY, this.cube, framebuffer);\n    }\n\n    // Draw the cubes\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    this.cube.draw();\n  }\n\n  onFinalize({gl}) {\n    this.cube.delete();\n  }\n}\n\nfunction pickInstance(gl, pickX, pickY, model, framebuffer) {\n  framebuffer.clear({color: true, depth: true});\n  // Render picking colors\n  /* eslint-disable camelcase */\n  model.setUniforms({picking_uActive: 1});\n  model.draw({framebuffer});\n  model.setUniforms({picking_uActive: 0});\n\n  const color = readPixelsToArray(framebuffer, {\n    sourceX: pickX,\n    sourceY: pickY,\n    sourceWidth: 1,\n    sourceHeight: 1,\n    sourceFormat: gl.RGBA,\n    sourceType: gl.UNSIGNED_BYTE\n  });\n\n  if (color[0] + color[1] + color[2] > 0) {\n    model.updateModuleSettings({\n      pickingSelectedColor: color\n    });\n  } else {\n    model.updateModuleSettings({\n      pickingSelectedColor: null\n    });\n  }\n}\n\n/* global window */\nif (typeof window !== 'undefined' && !window.website) {\n  const animationLoop = new AppAnimationLoop();\n  animationLoop.start();\n}\n","import React from 'react';\nimport AnimationLoopExamplePage from '../../src/components/animation-loop-example-page';\nimport AnimationLoop from '../../../examples/core/instancing/app';\n\nexport default class Example extends React.Component {\n  render() {\n    const { pageContext } = this.props;\n    const exampleConfig = (pageContext && pageContext.exampleConfig) || {};\n    return (\n      <AnimationLoopExamplePage AnimationLoop={AnimationLoop} exampleConfig={exampleConfig} />\n    );\n  }\n}\n","import Geometry from '../geometry/geometry';\nimport {uid} from '../utils';\n\n// prettier-ignore\nconst CUBE_INDICES = new Uint16Array([\n  0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 8, 9, 10, 8, 10, 11, 12, 13,\n  14, 12, 14, 15, 16, 17, 18, 16, 18, 19, 20, 21, 22, 20, 22, 23\n]);\n\n// prettier-ignore\nconst CUBE_POSITIONS = new Float32Array([\n  -1,  -1,  1, 1,  -1,  1,  1,  1,  1,  -1,  1,  1,\n  -1,  -1,  -1,  -1,  1,  -1,  1,  1,  -1,  1,  -1,  -1,\n  -1,  1,  -1,  -1,  1,  1,  1,  1,  1,  1,  1,  -1,\n  -1,  -1,  -1,  1,  -1,  -1,  1,  -1,  1,  -1,  -1,  1,\n  1,  -1,  -1,  1,  1,  -1,  1,  1,  1,  1,  -1,  1,\n  -1,  -1,  -1,  -1,  -1,  1,  -1,  1,  1,  -1,  1,  -1\n]);\n\n// TODO - could be Uint8\n// prettier-ignore\nconst CUBE_NORMALS = new Float32Array([\n  // Front face\n  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,\n  // Back face\n  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,\n  // Top face\n  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,\n  // Bottom face\n  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,\n  // Right face\n  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,\n  // Left face\n  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0\n]);\n\n// prettier-ignore\nconst CUBE_TEX_COORDS = new Float32Array([\n  // Front face\n  0,  0,  1,  0,  1,  1,  0,  1,\n  // Back face\n  1,  0,  1,  1,  0,  1,  0,  0,\n  // Top face\n  0,  1,  0,  0,  1,  0,  1,  1,\n  // Bottom face\n  1,  1,  0,  1,  0,  0,  1,  0,\n  // Right face\n  1,  0,  1,  1,  0,  1,  0,  0,\n  // Left face\n  0,  0,  1,  0,  1,  1,  0,  1\n]);\n\nconst ATTRIBUTES = {\n  POSITION: {size: 3, value: new Float32Array(CUBE_POSITIONS)},\n  NORMAL: {size: 3, value: new Float32Array(CUBE_NORMALS)},\n  TEXCOORD_0: {size: 2, value: new Float32Array(CUBE_TEX_COORDS)}\n};\n\nexport default class CubeGeometry extends Geometry {\n  constructor(props = {}) {\n    const {id = uid('cube-geometry')} = props;\n    super({\n      ...props,\n      id,\n      indices: {size: 1, value: new Uint16Array(CUBE_INDICES)},\n      attributes: {...ATTRIBUTES, ...props.attributes}\n    });\n  }\n}\n","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport MathArray from './math-array';\nimport { checkNumber } from '../../lib/validators';\nimport assert from '../../lib/assert';\n\nvar Vector = function (_MathArray) {\n  _inherits(Vector, _MathArray);\n\n  function Vector() {\n    _classCallCheck(this, Vector);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Vector).apply(this, arguments));\n  }\n\n  _createClass(Vector, [{\n    key: \"len\",\n    value: function len() {\n      return Math.sqrt(this.lengthSquared());\n    }\n  }, {\n    key: \"magnitude\",\n    value: function magnitude() {\n      return this.len();\n    }\n  }, {\n    key: \"lengthSquared\",\n    value: function lengthSquared() {\n      var length = 0;\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        length += this[i] * this[i];\n      }\n\n      return length;\n    }\n  }, {\n    key: \"magnitudeSquared\",\n    value: function magnitudeSquared() {\n      return this.lengthSquared();\n    }\n  }, {\n    key: \"distance\",\n    value: function distance(mathArray) {\n      return Math.sqrt(this.distanceSquared(mathArray));\n    }\n  }, {\n    key: \"distanceSquared\",\n    value: function distanceSquared(mathArray) {\n      var length = 0;\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        var dist = this[i] - mathArray[i];\n        length += dist * dist;\n      }\n\n      return checkNumber(length);\n    }\n  }, {\n    key: \"dot\",\n    value: function dot(mathArray) {\n      var product = 0;\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        product += this[i] * mathArray[i];\n      }\n\n      return checkNumber(product);\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize() {\n      var length = this.magnitude();\n\n      if (length !== 0) {\n        for (var i = 0; i < this.ELEMENTS; ++i) {\n          this[i] /= length;\n        }\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"multiply\",\n    value: function multiply() {\n      for (var _len = arguments.length, vectors = new Array(_len), _key = 0; _key < _len; _key++) {\n        vectors[_key] = arguments[_key];\n      }\n\n      for (var _i = 0, _vectors = vectors; _i < _vectors.length; _i++) {\n        var vector = _vectors[_i];\n\n        for (var i = 0; i < this.ELEMENTS; ++i) {\n          this[i] *= vector[i];\n        }\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"divide\",\n    value: function divide() {\n      for (var _len2 = arguments.length, vectors = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        vectors[_key2] = arguments[_key2];\n      }\n\n      for (var _i2 = 0, _vectors2 = vectors; _i2 < _vectors2.length; _i2++) {\n        var vector = _vectors2[_i2];\n\n        for (var i = 0; i < this.ELEMENTS; ++i) {\n          this[i] /= vector[i];\n        }\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"lengthSq\",\n    value: function lengthSq() {\n      return this.lengthSquared();\n    }\n  }, {\n    key: \"distanceTo\",\n    value: function distanceTo(vector) {\n      return this.distance(vector);\n    }\n  }, {\n    key: \"distanceToSquared\",\n    value: function distanceToSquared(vector) {\n      return this.distanceSquared(vector);\n    }\n  }, {\n    key: \"getComponent\",\n    value: function getComponent(i) {\n      assert(i >= 0 && i < this.ELEMENTS, 'index is out of range');\n      return checkNumber(this[i]);\n    }\n  }, {\n    key: \"setComponent\",\n    value: function setComponent(i, value) {\n      assert(i >= 0 && i < this.ELEMENTS, 'index is out of range');\n      this[i] = value;\n      return this.check();\n    }\n  }, {\n    key: \"addVectors\",\n    value: function addVectors(a, b) {\n      return this.copy(a).add(b);\n    }\n  }, {\n    key: \"subVectors\",\n    value: function subVectors(a, b) {\n      return this.copy(a).subtract(b);\n    }\n  }, {\n    key: \"multiplyVectors\",\n    value: function multiplyVectors(a, b) {\n      return this.copy(a).multiply(b);\n    }\n  }, {\n    key: \"addScaledVector\",\n    value: function addScaledVector(a, b) {\n      return this.add(new this.constructor(a).multiplyScalar(b));\n    }\n  }, {\n    key: \"x\",\n    get: function get() {\n      return this[0];\n    },\n    set: function set(value) {\n      return this[0] = checkNumber(value);\n    }\n  }, {\n    key: \"y\",\n    get: function get() {\n      return this[1];\n    },\n    set: function set(value) {\n      return this[1] = checkNumber(value);\n    }\n  }]);\n\n  return Vector;\n}(MathArray);\n\nexport { Vector as default };","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport Vector from './base/vector';\nimport { config, isArray } from '../lib/common';\nimport { checkNumber } from '../lib/validators';\nimport * as vec3 from 'gl-matrix/vec3';\nimport { vec3_transformMat2, vec3_transformMat4AsVector } from '../lib/gl-matrix-extras';\nvar ORIGIN = [0, 0, 0];\n\nvar Vector3 = function (_Vector) {\n  _inherits(Vector3, _Vector);\n\n  function Vector3() {\n    var _this;\n\n    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n    _classCallCheck(this, Vector3);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Vector3).call(this, -0, -0, -0));\n\n    if (arguments.length === 1 && isArray(x)) {\n      _this.copy(x);\n    } else {\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n        checkNumber(z);\n      }\n\n      _this[0] = x;\n      _this[1] = y;\n      _this[2] = z;\n    }\n\n    return _this;\n  }\n\n  _createClass(Vector3, [{\n    key: \"set\",\n    value: function set(x, y, z) {\n      this[0] = x;\n      this[1] = y;\n      this[2] = z;\n      return this.check();\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(array) {\n      this[0] = array[0];\n      this[1] = array[1];\n      this[2] = array[2];\n      return this.check();\n    }\n  }, {\n    key: \"fromObject\",\n    value: function fromObject(object) {\n      if (config.debug) {\n        checkNumber(object.x);\n        checkNumber(object.y);\n        checkNumber(object.z);\n      }\n\n      this[0] = object.x;\n      this[1] = object.y;\n      this[2] = object.z;\n      return this.check();\n    }\n  }, {\n    key: \"toObject\",\n    value: function toObject(object) {\n      object.x = this[0];\n      object.y = this[1];\n      object.z = this[2];\n      return object;\n    }\n  }, {\n    key: \"angle\",\n    value: function angle(vector) {\n      return vec3.angle(this, vector);\n    }\n  }, {\n    key: \"cross\",\n    value: function cross(vector) {\n      vec3.cross(this, this, vector);\n      return this.check();\n    }\n  }, {\n    key: \"rotateX\",\n    value: function rotateX(_ref) {\n      var radians = _ref.radians,\n          _ref$origin = _ref.origin,\n          origin = _ref$origin === void 0 ? ORIGIN : _ref$origin;\n      vec3.rotateX(this, this, origin, radians);\n      return this.check();\n    }\n  }, {\n    key: \"rotateY\",\n    value: function rotateY(_ref2) {\n      var radians = _ref2.radians,\n          _ref2$origin = _ref2.origin,\n          origin = _ref2$origin === void 0 ? ORIGIN : _ref2$origin;\n      vec3.rotateY(this, this, origin, radians);\n      return this.check();\n    }\n  }, {\n    key: \"rotateZ\",\n    value: function rotateZ(_ref3) {\n      var radians = _ref3.radians,\n          _ref3$origin = _ref3.origin,\n          origin = _ref3$origin === void 0 ? ORIGIN : _ref3$origin;\n      vec3.rotateZ(this, this, origin, radians);\n      return this.check();\n    }\n  }, {\n    key: \"transform\",\n    value: function transform(matrix4) {\n      return this.transformAsPoint(matrix4);\n    }\n  }, {\n    key: \"transformAsPoint\",\n    value: function transformAsPoint(matrix4) {\n      vec3.transformMat4(this, this, matrix4);\n      return this.check();\n    }\n  }, {\n    key: \"transformAsVector\",\n    value: function transformAsVector(matrix4) {\n      vec3_transformMat4AsVector(this, this, matrix4);\n      return this.check();\n    }\n  }, {\n    key: \"transformByMatrix3\",\n    value: function transformByMatrix3(matrix3) {\n      vec3.transformMat3(this, this, matrix3);\n      return this.check();\n    }\n  }, {\n    key: \"transformByMatrix2\",\n    value: function transformByMatrix2(matrix2) {\n      vec3_transformMat2(this, this, matrix2);\n      return this.check();\n    }\n  }, {\n    key: \"transformByQuaternion\",\n    value: function transformByQuaternion(quaternion) {\n      vec3.transformQuat(this, this, quaternion);\n      return this.check();\n    }\n  }, {\n    key: \"ELEMENTS\",\n    get: function get() {\n      return 3;\n    }\n  }, {\n    key: \"z\",\n    get: function get() {\n      return this[2];\n    },\n    set: function set(value) {\n      return this[2] = checkNumber(value);\n    }\n  }]);\n\n  return Vector3;\n}(Vector);\n\nexport { Vector3 as default };","let channelHandles = 1;\nlet animationHandles = 1;\n\nexport class Timeline {\n  constructor() {\n    this.time = 0;\n    this.channels = new Map();\n    this.animations = new Map();\n    this.playing = false;\n    this.lastEngineTime = -1;\n  }\n\n  addChannel(props) {\n    const {delay = 0, duration = Number.POSITIVE_INFINITY, rate = 1, repeat = 1} = props;\n\n    const handle = channelHandles++;\n    const channel = {\n      time: 0,\n      delay,\n      duration,\n      rate,\n      repeat\n    };\n    this._setChannelTime(channel, this.time);\n    this.channels.set(handle, channel);\n\n    return handle;\n  }\n\n  removeChannel(handle) {\n    this.channels.delete(handle);\n\n    for (const [animationHandle, animation] of this.animations) {\n      if (animation.channel === handle) {\n        this.detachAnimation(animationHandle);\n      }\n    }\n  }\n\n  isFinished(handle) {\n    const channel = this.channels.get(handle);\n    if (channel === undefined) {\n      return false;\n    }\n\n    return this.time >= channel.delay + channel.duration * channel.repeat;\n  }\n\n  getTime(handle) {\n    if (handle === undefined) {\n      return this.time;\n    }\n\n    const channel = this.channels.get(handle);\n\n    if (channel === undefined) {\n      return -1;\n    }\n\n    return channel.time;\n  }\n\n  setTime(time) {\n    this.time = Math.max(0, time);\n\n    const channels = this.channels.values();\n    for (const channel of channels) {\n      this._setChannelTime(channel, this.time);\n    }\n\n    const animations = this.animations.values();\n    for (const animationData of animations) {\n      const {animation, channel} = animationData;\n      animation.setTime(this.getTime(channel));\n    }\n  }\n\n  play() {\n    this.playing = true;\n  }\n\n  pause() {\n    this.playing = false;\n    this.lastEngineTime = -1;\n  }\n\n  reset() {\n    this.setTime(0);\n  }\n\n  attachAnimation(animation, channelHandle) {\n    const animationHandle = animationHandles++;\n\n    this.animations.set(animationHandle, {\n      animation,\n      channel: channelHandle\n    });\n\n    animation.setTime(this.getTime(channelHandle));\n\n    return animationHandle;\n  }\n\n  detachAnimation(handle) {\n    this.animations.delete(handle);\n  }\n\n  update(engineTime) {\n    if (this.playing) {\n      if (this.lastEngineTime === -1) {\n        this.lastEngineTime = engineTime;\n      }\n      this.setTime(this.time + (engineTime - this.lastEngineTime));\n      this.lastEngineTime = engineTime;\n    }\n  }\n\n  _setChannelTime(channel, time) {\n    const offsetTime = time - channel.delay;\n    const totalDuration = channel.duration * channel.repeat;\n    // Note(Tarek): Don't loop on final repeat.\n    if (offsetTime >= totalDuration) {\n      channel.time = channel.duration * channel.rate;\n    } else {\n      channel.time = Math.max(0, offsetTime) % channel.duration;\n      channel.time *= channel.rate;\n    }\n  }\n}\n"],"sourceRoot":""}