{"version":3,"sources":["webpack:///../modules/core/src/geometries/sphere-geometry.js","webpack:///../examples/lessons/13/app.js","webpack:///./templates/lessons/example-13.jsx","webpack:///../modules/core/src/geometries/cube-geometry.js"],"names":["SphereGeometry","props","id","uid","nlat","nlong","radius","latRange","Math","longRange","numVertices","value","positions","Float32Array","normals","texCoords","indices","Uint16Array","y","x","u","v","index","i2","i3","theta","phi","sinTheta","cosTheta","sinPhi","cosPhi","ux","uy","uz","r","numVertsAround","size","attributes","POSITION","NORMAL","TEXCOORD_0","tesselateSphere","Geometry","FRAGMENT_LIGHTING_VERTEX_SHADER","FRAGMENT_LIGHTING_FRAGMENT_SHADER","appState","moonRotationMatrix","radians","cubeRotationMatrix","lastTime","AppAnimationLoop","getInfo","onInitialize","canvas","gl","setParameters","clearColor","clearDepth","depthTest","moonTexture","crateTexture","moon","fs","vs","geometry","uniforms","uSampler","cube","onRender","aspect","tick","GL","eyePos","uVMatrix","eye","center","up","ambientColor","pointLightingLocation","pointLightColor","uUseLighting","uUseTextures","uAmbientColor","uPointLightingLocation","uPointLightingColor","uMMatrix","uPMatrix","fov","near","far","state","timeNow","Date","elapsed","newMatrix","animate","AnimationLoop","window","animationLoop","Example","render","exampleConfig","this","pageContext","React","Component","CUBE_INDICES","CUBE_POSITIONS","CUBE_NORMALS","CUBE_TEX_COORDS","ATTRIBUTES","CubeGeometry"],"mappings":"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","file":"component---templates-lessons-example-13-jsx-faebf89e329c848cbbe8.js","sourcesContent":["import Geometry from '../geometry/geometry';\nimport {uid} from '../utils';\n\nexport default class SphereGeometry extends Geometry {\n  constructor(props = {}) {\n    const {id = uid('sphere-geometry')} = props;\n    const {indices, attributes} = tesselateSphere(props);\n    super({\n      ...props,\n      id,\n      indices,\n      attributes: {...attributes, ...props.attributes}\n    });\n  }\n}\n\n// Primitives inspired by TDL http://code.google.com/p/webglsamples/,\n// copyright 2011 Google Inc. new BSD License\n// (http://www.opensource.org/licenses/bsd-license.php).\n/* eslint-disable max-statements, complexity */\nfunction tesselateSphere(props) {\n  const {nlat = 10, nlong = 10} = props;\n  let {radius = 1} = props;\n\n  const startLat = 0;\n  const endLat = Math.PI;\n  const latRange = endLat - startLat;\n  const startLong = 0;\n  const endLong = 2 * Math.PI;\n  const longRange = endLong - startLong;\n  const numVertices = (nlat + 1) * (nlong + 1);\n\n  if (typeof radius === 'number') {\n    const value = radius;\n    radius = (n1, n2, n3, u, v) => value;\n  }\n\n  const positions = new Float32Array(numVertices * 3);\n  const normals = new Float32Array(numVertices * 3);\n  const texCoords = new Float32Array(numVertices * 2);\n  const indices = new Uint16Array(nlat * nlong * 6);\n\n  // Create positions, normals and texCoords\n  for (let y = 0; y <= nlat; y++) {\n    for (let x = 0; x <= nlong; x++) {\n      const u = x / nlong;\n      const v = y / nlat;\n\n      const index = x + y * (nlong + 1);\n      const i2 = index * 2;\n      const i3 = index * 3;\n\n      const theta = longRange * u;\n      const phi = latRange * v;\n      const sinTheta = Math.sin(theta);\n      const cosTheta = Math.cos(theta);\n      const sinPhi = Math.sin(phi);\n      const cosPhi = Math.cos(phi);\n      const ux = cosTheta * sinPhi;\n      const uy = cosPhi;\n      const uz = sinTheta * sinPhi;\n\n      const r = radius(ux, uy, uz, u, v);\n\n      positions[i3 + 0] = r * ux;\n      positions[i3 + 1] = r * uy;\n      positions[i3 + 2] = r * uz;\n\n      normals[i3 + 0] = ux;\n      normals[i3 + 1] = uy;\n      normals[i3 + 2] = uz;\n\n      texCoords[i2 + 0] = u;\n      texCoords[i2 + 1] = 1 - v;\n    }\n  }\n\n  // Create indices\n  const numVertsAround = nlat + 1;\n  for (let x = 0; x < nlat; x++) {\n    for (let y = 0; y < nlong; y++) {\n      const index = (x * nlong + y) * 6;\n\n      indices[index + 0] = y * numVertsAround + x;\n      indices[index + 1] = y * numVertsAround + x + 1;\n      indices[index + 2] = (y + 1) * numVertsAround + x;\n\n      indices[index + 3] = (y + 1) * numVertsAround + x;\n      indices[index + 4] = y * numVertsAround + x + 1;\n      indices[index + 5] = (y + 1) * numVertsAround + x + 1;\n    }\n  }\n\n  return {\n    indices: {size: 1, value: indices},\n    attributes: {\n      POSITION: {size: 3, value: positions},\n      NORMAL: {size: 3, value: normals},\n      TEXCOORD_0: {size: 2, value: texCoords}\n    }\n  };\n}\n","import GL from '@luma.gl/constants';\nimport {\n  AnimationLoop,\n  Texture2D,\n  setParameters,\n  Model,\n  SphereGeometry,\n  CubeGeometry\n} from '@luma.gl/core';\nimport {Matrix4, radians} from 'math.gl';\n\nconst INFO_HTML = `\n<p>\n  <a href=\"http://learningwebgl.com/blog/?p=1523\" target=\"_blank\">\n  Per-fragment lighting and multiple programs\n  </a>\n<p>\n  The classic WebGL Lessons in luma.gl\n`;\n\nconst FRAGMENT_LIGHTING_VERTEX_SHADER = `\\\nprecision highp float;\nattribute vec3 positions;\nattribute vec3 normals;\nattribute vec2 texCoords;\n\nuniform mat4 uMMatrix;\nuniform mat4 uVMatrix;\nuniform mat4 uPMatrix;\n\nvarying vec2 vTextureCoord;\nvarying vec4 vTransformedNormal;\nvarying vec4 vPosition;\n\nvoid main(void) {\n  vPosition = uMMatrix * vec4(positions, 1.0);\n  gl_Position = uPMatrix * uVMatrix * vPosition;\n  vTextureCoord = texCoords;\n  vTransformedNormal = uMMatrix * vec4(normals, 0.0);\n}\n`;\n\nconst FRAGMENT_LIGHTING_FRAGMENT_SHADER = `\\\nprecision highp float;\n\nuniform vec3 uAmbientColor;\n\nuniform vec3 uPointLightingLocation;\nuniform vec3 uPointLightingColor;\n\nuniform bool uUseLighting;\nuniform bool uUseTextures;\n\nvarying vec2 vTextureCoord;\nvarying vec4 vTransformedNormal;\nvarying vec4 vPosition;\n\nuniform sampler2D uSampler;\n\nvoid main(void) {\n  vec3 lightWeighting;\n\n  if (!uUseLighting) {\n    lightWeighting = vec3(1.0, 1.0, 1.0);\n  } else {\n    vec3 lightDirection = normalize(uPointLightingLocation - vPosition.xyz);\n    float pointLightWeighting = max(dot(vTransformedNormal.xyz, lightDirection), 0.0);\n    lightWeighting = uAmbientColor + uPointLightingColor * pointLightWeighting;\n  }\n\n  vec4 fragmentColor;\n  if (uUseTextures) {\n    fragmentColor = texture2D(uSampler, vec2(1.0 - vTextureCoord.s, 1.0 - vTextureCoord.t));\n  } else {\n    fragmentColor = vec4(1.0, 1.0, 1.0, 1.0);\n  }\n  gl_FragColor = vec4(fragmentColor.rgb * lightWeighting, fragmentColor.a);\n}\n`;\n\nconst appState = {\n  moonRotationMatrix: new Matrix4().rotateY(radians(180)).translate([2, 0, 0]),\n  cubeRotationMatrix: new Matrix4().translate([1.25, 0, 0]),\n  lastTime: 0\n};\n\nexport default class AppAnimationLoop extends AnimationLoop {\n  static getInfo() {\n    return INFO_HTML;\n  }\n\n  onInitialize({canvas, gl}) {\n    setParameters(gl, {\n      clearColor: [0, 0, 0, 1],\n      clearDepth: 1,\n      depthTest: true\n    });\n\n    const moonTexture = new Texture2D(gl, 'moon.gif');\n    const crateTexture = new Texture2D(gl, 'crate.gif');\n\n    const moon = new Model(gl, {\n      fs: FRAGMENT_LIGHTING_FRAGMENT_SHADER,\n      vs: FRAGMENT_LIGHTING_VERTEX_SHADER,\n      geometry: new SphereGeometry({\n        nlat: 30,\n        nlong: 30,\n        radius: 2\n      }),\n      uniforms: {\n        uSampler: moonTexture\n      }\n    });\n\n    const cube = new Model(gl, {\n      fs: FRAGMENT_LIGHTING_FRAGMENT_SHADER,\n      vs: FRAGMENT_LIGHTING_VERTEX_SHADER,\n      geometry: new CubeGeometry(),\n      uniforms: {\n        uSampler: crateTexture\n      }\n    });\n\n    return {moon, cube};\n  }\n\n  // eslint-disable-next-line complexity\n  onRender({gl, tick, aspect, moon, cube}) {\n    gl.clear(GL.COLOR_BUFFER_BIT | GL.DEPTH_BUFFER_BIT);\n\n    // set camera position\n    const eyePos = new Matrix4().rotateX(radians(-30)).transform([0, 0, 10]);\n\n    const uVMatrix = new Matrix4().lookAt({eye: eyePos, center: [0, 0, 0], up: [0, 1, 0]});\n\n    const useLighting = true;\n    const useTextures = true;\n    const ambientColor = [0.1, 0.1, 0.1];\n    const pointLightingLocation = [4, 4, 4];\n    const pointLightColor = [1.0, 0.8, 0.8];\n\n    moon.setUniforms({\n      uUseLighting: useLighting,\n      uUseTextures: useTextures\n    });\n\n    cube.setUniforms({\n      uUseLighting: useLighting,\n      uUseTextures: useTextures\n    });\n\n    if (useLighting) {\n      moon.setUniforms({\n        uAmbientColor: ambientColor,\n        uPointLightingLocation: pointLightingLocation,\n        uPointLightingColor: pointLightColor\n      });\n\n      cube.setUniforms({\n        uAmbientColor: ambientColor,\n        uPointLightingLocation: pointLightingLocation,\n        uPointLightingColor: pointLightColor\n      });\n    }\n\n    moon\n      .setUniforms({\n        uMMatrix: appState.moonRotationMatrix,\n        uVMatrix,\n        uPMatrix: new Matrix4().perspective({\n          fov: (45 * Math.PI) / 180,\n          aspect,\n          near: 0.1,\n          far: 100\n        })\n      })\n      .draw();\n\n    cube\n      .setUniforms({\n        uMMatrix: appState.cubeRotationMatrix,\n        uVMatrix,\n        uPMatrix: new Matrix4().perspective({\n          fov: (45 * Math.PI) / 180,\n          aspect,\n          near: 0.1,\n          far: 100\n        })\n      })\n      .draw();\n\n    animate(appState);\n  }\n}\n\nfunction animate(state) {\n  const timeNow = new Date().getTime();\n  if (state.lastTime !== 0) {\n    const elapsed = timeNow - state.lastTime;\n    const newMatrix = new Matrix4().rotateY(radians(elapsed / 20));\n    state.moonRotationMatrix.multiplyLeft(newMatrix);\n    state.cubeRotationMatrix.multiplyLeft(newMatrix);\n  }\n  state.lastTime = timeNow;\n}\n\n/* global window */\nif (typeof window !== 'undefined' && !window.website) {\n  const animationLoop = new AppAnimationLoop();\n  animationLoop.start();\n}\n","import React from 'react';\nimport AnimationLoopExamplePage from '../../src/components/animation-loop-example-page';\nimport AnimationLoop from '../../../examples/lessons/13/app';\n\nexport default class Example extends React.Component {\n  render() {\n    return (\n      <AnimationLoopExamplePage AnimationLoop={AnimationLoop} exampleConfig={this.props.pageContext.exampleConfig} />\n    );\n  }\n}\n","import Geometry from '../geometry/geometry';\nimport {uid} from '../utils';\n\n// prettier-ignore\nconst CUBE_INDICES = new Uint16Array([\n  0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 8, 9, 10, 8, 10, 11, 12, 13,\n  14, 12, 14, 15, 16, 17, 18, 16, 18, 19, 20, 21, 22, 20, 22, 23\n]);\n\n// prettier-ignore\nconst CUBE_POSITIONS = new Float32Array([\n  -1,  -1,  1, 1,  -1,  1,  1,  1,  1,  -1,  1,  1,\n  -1,  -1,  -1,  -1,  1,  -1,  1,  1,  -1,  1,  -1,  -1,\n  -1,  1,  -1,  -1,  1,  1,  1,  1,  1,  1,  1,  -1,\n  -1,  -1,  -1,  1,  -1,  -1,  1,  -1,  1,  -1,  -1,  1,\n  1,  -1,  -1,  1,  1,  -1,  1,  1,  1,  1,  -1,  1,\n  -1,  -1,  -1,  -1,  -1,  1,  -1,  1,  1,  -1,  1,  -1\n]);\n\n// TODO - could be Uint8\n// prettier-ignore\nconst CUBE_NORMALS = new Float32Array([\n  // Front face\n  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,\n  // Back face\n  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,\n  // Top face\n  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,\n  // Bottom face\n  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,\n  // Right face\n  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,\n  // Left face\n  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0\n]);\n\n// prettier-ignore\nconst CUBE_TEX_COORDS = new Float32Array([\n  // Front face\n  0,  0,  1,  0,  1,  1,  0,  1,\n  // Back face\n  1,  0,  1,  1,  0,  1,  0,  0,\n  // Top face\n  0,  1,  0,  0,  1,  0,  1,  1,\n  // Bottom face\n  1,  1,  0,  1,  0,  0,  1,  0,\n  // Right face\n  1,  0,  1,  1,  0,  1,  0,  0,\n  // Left face\n  0,  0,  1,  0,  1,  1,  0,  1\n]);\n\nconst ATTRIBUTES = {\n  POSITION: {size: 3, value: new Float32Array(CUBE_POSITIONS)},\n  NORMAL: {size: 3, value: new Float32Array(CUBE_NORMALS)},\n  TEXCOORD_0: {size: 2, value: new Float32Array(CUBE_TEX_COORDS)}\n};\n\nexport default class CubeGeometry extends Geometry {\n  constructor(props = {}) {\n    const {id = uid('cube-geometry')} = props;\n    super({\n      ...props,\n      id,\n      indices: {size: 1, value: new Uint16Array(CUBE_INDICES)},\n      attributes: {...ATTRIBUTES, ...props.attributes}\n    });\n  }\n}\n"],"sourceRoot":""}